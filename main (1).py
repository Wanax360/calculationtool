import numpy as np
import pandas as pd
import streamlit as st

st.header(":black[RoyalSystem Calculation Tool]",divider="red")

#Scheme selection:Calculations are being made according to this statement, every calculation can change accordingly
selected_scheme = st.selectbox(
    "Which scheme are you calculating?",
    ("ISO 9001",
     "ISO 14001",
     "ISO 45001",
     )
)

#Employee number selection:Calculations are being made according to this statement.
employee_number =st.number_input('What is the number of employees?')

#According to the type there can be increase or decrease on numbers
increase_or_decrease = st.selectbox(
    "Would you like to apply increase or decrease?",
    ("No",
     "Increase",
     "Decrease")
)

#if the answer for above question Increase or Decrease there should calculation otherwise it should stay remain
rate_of_discount = st.number_input('How much decrease or increase would you like to apply?',max_value=30)

#Site is the second place that has to be calculated.
site_info = st.selectbox(
    "Is there any sites?",
    ("No",
     "Yes",
     ))

#Accordingly we have to take mandays of the site too.
if site_info == "Yes":
  employee_number_site = st.number_input('What is the number of employees of your site?')

#After geeting the number of employee, we can say Raw Manday.
tablo_9001={ 0:0 ,1:1.5,	2:1.5,	3:1.5,	4:1.5,	5:1.5,	6:2,	7:2,	8:2,	9:2,	10:2,	11:2.5,	12:2.5,	13:2.5,	14:2.5,	15:2.5,	16:3,	17:3,	18:3,	19:3,	20:3,	21:3,	22:3,	23:3,	24:3,	25:3,	26:4,	27:4,	28:4,	29:4,	30:4,	31:4,	32:4,	33:4,	34:4,	35:4,	36:4,	37:4,	38:4,	39:4,	40:4,	41:4,	42:4,	43:4,	44:4,	45:4,	46:5,	47:5,	48:5,	49:5,	50:5,	51:5,	52:5,	53:5,	54:5,	55:5,	56:5,	57:5,	58:5,	59:5,	60:5,	61:5,	62:5,	63:5,	64:5,	65:5,	66:6,	67:6,	68:6,	69:6,	70:6,	71:6,	72:6,	73:6,	74:6,	75:6,	76:6,	77:6,	78:6,	79:6,	80:6,	81:6,	82:6,	83:6,	84:6,	85:6,	86:7,	87:7,	88:7,	89:7,	90:7,	91:7,	92:7,	93:7,	94:7,	95:7,	96:7,	97:7,	98:7,	99:7,	100:7,	101:7,	102:7,	103:7,	104:7,	105:7,	106:7,	107:7,	108:7,	109:7,	110:7,	111:7,	112:7,	113:7,	114:7,	115:7,	116:7,	117:7,	118:7,	119:7,	120:7,	121:7,	122:7,	123:7,	124:7,	125:7,	126:8,	127:8,	128:8,	129:8,	130:8,	131:8,	132:8,	133:8,	134:8,	135:8,	136:8,	137:8,	138:8,	139:8,	140:8,	141:8,	142:8,	143:8,	144:8,	145:8,	146:8,	147:8,	148:8,	149:8,	150:8,	151:8,	152:8,	153:8,	154:8,	155:8,	156:8,	157:8,	158:8,	159:8,	160:8,	161:8,	162:8,	163:8,	164:8,	165:8,	166:8,	167:8,	168:8,	169:8,	170:8,	171:8,	172:8,	173:8,	174:8,	175:8,	176:9,	177:9,	178:9,	179:9,	180:9,	181:9,	182:9,	183:9,	184:9,	185:9,	186:9,	187:9,	188:9,	189:9,	190:9,	191:9,	192:9,	193:9,	194:9,	195:9,	196:9,	197:9,	198:9,	199:9,	200:9,	201:9,	202:9,	203:9,	204:9,	205:9,	206:9,	207:9,	208:9,	209:9,	210:9,	211:9,	212:9,	213:9,	214:9,	215:9,	216:9,	217:9,	218:9,	219:9,	220:9,	221:9,	222:9,	223:9,	224:9,	225:9,	226:9,	227:9,	228:9,	229:9,	230:9,	231:9,	232:9,	233:9,	234:9,	235:9,	236:9,	237:9,	238:9,	239:9,	240:9,	241:9,	242:9,	243:9,	244:9,	245:9,	246:9,	247:9,	248:9,	249:9,	250:9,	251:9,	252:9,	253:9,	254:9,	255:9,	256:9,	257:9,	258:9,	259:9,	260:9,	261:9,	262:9,	263:9,	264:9,	265:9,	266:9,	267:9,	268:9,	269:9,	270:9,	271:9,	272:9,	273:9,	274:9,	275:9,	276:10,	277:10,	278:10,	279:10,	280:10,	281:10,	282:10,	283:10,	284:10,	285:10,	286:10,	287:10,	288:10,	289:10,	290:10,	291:10,	292:10,	293:10,	294:10,	295:10,	296:10,	297:10,	298:10,	299:10,	300:10,	301:10,	302:10,	303:10,	304:10,	305:10,	306:10,	307:10,	308:10,	309:10,	310:10,	311:10,	312:10,	313:10,	314:10,	315:10,	316:10,	317:10,	318:10,	319:10,	320:10,	321:10,	322:10,	323:10,	324:10,	325:10,	326:10,	327:10,	328:10,	329:10,	330:10,	331:10,	332:10,	333:10,	334:10,	335:10,	336:10,	337:10,	338:10,	339:10,	340:10,	341:10,	342:10,	343:10,	344:10,	345:10,	346:10,	347:10,	348:10,	349:10,	350:10,	351:10,	352:10,	353:10,	354:10,	355:10,	356:10,	357:10,	358:10,	359:10,	360:10,	361:10,	362:10,	363:10,	364:10,	365:10,	366:10,	367:10,	368:10,	369:10,	370:10,	371:10,	372:10,	373:10,	374:10,	375:10,	376:10,	377:10,	378:10,	379:10,	380:10,	381:10,	382:10,	383:10,	384:10,	385:10,	386:10,	387:10,	388:10,	389:10,	390:10,	391:10,	392:10,	393:10,	394:10,	395:10,	396:10,	397:10,	398:10,	399:10,	400:10,	401:10,	402:10,	403:10,	404:10,	405:10,	406:10,	407:10,	408:10,	409:10,	410:10,	411:10,	412:10,	413:10,	414:10,	415:10,	416:10,	417:10,	418:10,	419:10,	420:10,	421:10,	422:10,	423:10,	424:10,	425:10,	426:11,	427:11,	428:11,	429:11,	430:11,	431:11,	432:11,	433:11,	434:11,	435:11,	436:11,	437:11,	438:11,	439:11,	440:11,	441:11,	442:11,	443:11,	444:11,	445:11,	446:11,	447:11,	448:11,	449:11,	450:11,	451:11,	452:11,	453:11,	454:11,	455:11,	456:11,	457:11,	458:11,	459:11,	460:11,	461:11,	462:11,	463:11,	464:11,	465:11,	466:11,	467:11,	468:11,	469:11,	470:11,	471:11,	472:11,	473:11,	474:11,	475:11,	476:11,	477:11,	478:11,	479:11,	480:11,	481:11,	482:11,	483:11,	484:11,	485:11,	486:11,	487:11,	488:11,	489:11,	490:11,	491:11,	492:11,	493:11,	494:11,	495:11,	496:11,	497:11,	498:11,	499:11,	500:11,	501:11,	502:11,	503:11,	504:11,	505:11,	506:11,	507:11,	508:11,	509:11,	510:11,	511:11,	512:11,	513:11,	514:11,	515:11,	516:11,	517:11,	518:11,	519:11,	520:11,	521:11,	522:11,	523:11,	524:11,	525:11,	526:11,	527:11,	528:11,	529:11,	530:11,	531:11,	532:11,	533:11,	534:11,	535:11,	536:11,	537:11,	538:11,	539:11,	540:11,	541:11,	542:11,	543:11,	544:11,	545:11,	546:11,	547:11,	548:11,	549:11,	550:11,	551:11,	552:11,	553:11,	554:11,	555:11,	556:11,	557:11,	558:11,	559:11,	560:11,	561:11,	562:11,	563:11,	564:11,	565:11,	566:11,	567:11,	568:11,	569:11,	570:11,	571:11,	572:11,	573:11,	574:11,	575:11,	576:11,	577:11,	578:11,	579:11,	580:11,	581:11,	582:11,	583:11,	584:11,	585:11,	586:11,	587:11,	588:11,	589:11,	590:11,	591:11,	592:11,	593:11,	594:11,	595:11,	596:11,	597:11,	598:11,	599:11,	600:11,	601:11,	602:11,	603:11,	604:11,	605:11,	606:11,	607:11,	608:11,	609:11,	610:11,	611:11,	612:11,	613:11,	614:11,	615:11,	616:11,	617:11,	618:11,	619:11,	620:11,	621:11,	622:11,	623:11,	624:11,	625:11,	626:11,	627:12,	628:12,	629:12,	630:12,	631:12,	632:12,	633:12,	634:12,	635:12,	636:12,	637:12,	638:12,	639:12,	640:12,	641:12,	642:12,	643:12,	644:12,	645:12,	646:12,	647:12,	648:12,	649:12,	650:12,	651:12,	652:12,	653:12,	654:12,	655:12,	656:12,	657:12,	658:12,	659:12,	660:12,	661:12,	662:12,	663:12,	664:12,	665:12,	666:12,	667:12,	668:12,	669:12,	670:12,	671:12,	672:12,	673:12,	674:12,	675:12,	676:12,	677:12,	678:12,	679:12,	680:12,	681:12,	682:12,	683:12,	684:12,	685:12,	686:12,	687:12,	688:12,	689:12,	690:12,	691:12,	692:12,	693:12,	694:12,	695:12,	696:12,	697:12,	698:12,	699:12,	700:12,	701:12,	702:12,	703:12,	704:12,	705:12,	706:12,	707:12,	708:12,	709:12,	710:12,	711:12,	712:12,	713:12,	714:12,	715:12,	716:12,	717:12,	718:12,	719:12,	720:12,	721:12,	722:12,	723:12,	724:12,	725:12,	726:12,	727:12,	728:12,	729:12,	730:12,	731:12,	732:12,	733:12,	734:12,	735:12,	736:12,	737:12,	738:12,	739:12,	740:12,	741:12,	742:12,	743:12,	744:12,	745:12,	746:12,	747:12,	748:12,	749:12,	750:12,	751:12,	752:12,	753:12,	754:12,	755:12,	756:12,	757:12,	758:12,	759:12,	760:12,	761:12,	762:12,	763:12,	764:12,	765:12,	766:12,	767:12,	768:12,	769:12,	770:12,	771:12,	772:12,	773:12,	774:12,	775:12,	776:12,	777:12,	778:12,	779:12,	780:12,	781:12,	782:12,	783:12,	784:12,	785:12,	786:12,	787:12,	788:12,	789:12,	790:12,	791:12,	792:12,	793:12,	794:12,	795:12,	796:12,	797:12,	798:12,	799:12,	800:12,	801:12,	802:12,	803:12,	804:12,	805:12,	806:12,	807:12,	808:12,	809:12,	810:12,	811:12,	812:12,	813:12,	814:12,	815:12,	816:12,	817:12,	818:12,	819:12,	820:12,	821:12,	822:12,	823:12,	824:12,	825:12,	826:12,	827:12,	828:12,	829:12,	830:12,	831:12,	832:12,	833:12,	834:12,	835:12,	836:12,	837:12,	838:12,	839:12,	840:12,	841:12,	842:12,	843:12,	844:12,	845:12,	846:12,	847:12,	848:12,	849:12,	850:12,	851:12,	852:12,	853:12,	854:12,	855:12,	856:12,	857:12,	858:12,	859:12,	860:12,	861:12,	862:12,	863:12,	864:12,	865:12,	866:12,	867:12,	868:12,	869:12,	870:12,	871:12,	872:12,	873:12,	874:12,	875:12,	876:13,	877:13,	878:13,	879:13,	880:13,	881:13,	882:13,	883:13,	884:13,	885:13,	886:13,	887:13,	888:13,	889:13,	890:13,	891:13,	892:13,	893:13,	894:13,	895:13,	896:13,	897:13,	898:13,	899:13,	900:13,	901:13,	902:13,	903:13,	904:13,	905:13,	906:13,	907:13,	908:13,	909:13,	910:13,	911:13,	912:13,	913:13,	914:13,	915:13,	916:13,	917:13,	918:13,	919:13,	920:13,	921:13,	922:13,	923:13,	924:13,	925:13,	926:13,	927:13,	928:13,	929:13,	930:13,	931:13,	932:13,	933:13,	934:13,	935:13,	936:13,	937:13,	938:13,	939:13,	940:13,	941:13,	942:13,	943:13,	944:13,	945:13,	946:13,	947:13,	948:13,	949:13,	950:13,	951:13,	952:13,	953:13,	954:13,	955:13,	956:13,	957:13,	958:13,	959:13,	960:13,	961:13,	962:13,	963:13,	964:13,	965:13,	966:13,	967:13,	968:13,	969:13,	970:13,	971:13,	972:13,	973:13,	974:13,	975:13,	976:13,	977:13,	978:13,	979:13,	980:13,	981:13,	982:13,	983:13,	984:13,	985:13,	986:13,	987:13,	988:13,	989:13,	990:13,	991:13,	992:13,	993:13,	994:13,	995:13,	996:13,	997:13,	998:13,	999:13,	1000:13,	1001:13,	1002:13,	1003:13,	1004:13,	1005:13,	1006:13,	1007:13,	1008:13,	1009:13,	1010:13,	1011:13,	1012:13,	1013:13,	1014:13,	1015:13,	1016:13,	1017:13,	1018:13,	1019:13,	1020:13,	1021:13,	1022:13,	1023:13,	1024:13,	1025:13,	1026:13,	1027:13,	1028:13,	1029:13,	1030:13,	1031:13,	1032:13,	1033:13,	1034:13,	1035:13,	1036:13,	1037:13,	1038:13,	1039:13,	1040:13,	1041:13,	1042:13,	1043:13,	1044:13,	1045:13,	1046:13,	1047:13,	1048:13,	1049:13,	1050:13,	1051:13,	1052:13,	1053:13,	1054:13,	1055:13,	1056:13,	1057:13,	1058:13,	1059:13,	1060:13,	1061:13,	1062:13,	1063:13,	1064:13,	1065:13,	1066:13,	1067:13,	1068:13,	1069:13,	1070:13,	1071:13,	1072:13,	1073:13,	1074:13,	1075:13,	1076:13,	1077:13,	1078:13,	1079:13,	1080:13,	1081:13,	1082:13,	1083:13,	1084:13,	1085:13,	1086:13,	1087:13,	1088:13,	1089:13,	1090:13,	1091:13,	1092:13,	1093:13,	1094:13,	1095:13,	1096:13,	1097:13,	1098:13,	1099:13,	1100:13,	1101:13,	1102:13,	1103:13,	1104:13,	1105:13,	1106:13,	1107:13,	1108:13,	1109:13,	1110:13,	1111:13,	1112:13,	1113:13,	1114:13,	1115:13,	1116:13,	1117:13,	1118:13,	1119:13,	1120:13,	1121:13,	1122:13,	1123:13,	1124:13,	1125:13,	1126:13,	1127:13,	1128:13,	1129:13,	1130:13,	1131:13,	1132:13,	1133:13,	1134:13,	1135:13,	1136:13,	1137:13,	1138:13,	1139:13,	1140:13,	1141:13,	1142:13,	1143:13,	1144:13,	1145:13,	1146:13,	1147:13,	1148:13,	1149:13,	1150:13,	1151:13,	1152:13,	1153:13,	1154:13,	1155:13,	1156:13,	1157:13,	1158:13,	1159:13,	1160:13,	1161:13,	1162:13,	1163:13,	1164:13,	1165:13,	1166:13,	1167:13,	1168:13,	1169:13,	1170:13,	1171:13,	1172:13,	1173:13,	1174:13,	1175:13,}

tablo_14_45_high={0:0, 1:3,	2:3,	3:3,	4:3,	5:3,	6:3.5,	7:3.5,	8:3.5,	9:3.5,	10:3.5,	11:4.5,	12:4.5,	13:4.5,	14:4.5,	15:4.5,	16:5.5,	17:5.5,	18:5.5,	19:5.5,	20:5.5,	21:5.5,	22:5.5,	23:5.5,	24:5.5,	25:5.5,	26:7,	27:7,	28:7,	29:7,	30:7,	31:7,	32:7,	33:7,	34:7,	35:7,	36:7,	37:7,	38:7,	39:7,	40:7,	41:7,	42:7,	43:7,	44:7,	45:7,	46:8,	47:8,	48:8,	49:8,	50:8,	51:8,	52:8,	53:8,	54:8,	55:8,	56:8,	57:8,	58:8,	59:8,	60:8,	61:8,	62:8,	63:8,	64:8,	65:8,	66:9,	67:9,	68:9,	69:9,	70:9,	71:9,	72:9,	73:9,	74:9,	75:9,	76:9,	77:9,	78:9,	79:9,	80:9,	81:9,	82:9,	83:9,	84:9,	85:9,	86:11,	87:11,	88:11,	89:11,	90:11,	91:11,	92:11,	93:11,	94:11,	95:11,	96:11,	97:11,	98:11,	99:11,	100:11,	101:11,	102:11,	103:11,	104:11,	105:11,	106:11,	107:11,	108:11,	109:11,	110:11,	111:11,	112:11,	113:11,	114:11,	115:11,	116:11,	117:11,	118:11,	119:11,	120:11,	121:11,	122:11,	123:11,	124:11,	125:11,	126:12,	127:12,	128:12,	129:12,	130:12,	131:12,	132:12,	133:12,	134:12,	135:12,	136:12,	137:12,	138:12,	139:12,	140:12,	141:12,	142:12,	143:12,	144:12,	145:12,	146:12,	147:12,	148:12,	149:12,	150:12,	151:12,	152:12,	153:12,	154:12,	155:12,	156:12,	157:12,	158:12,	159:12,	160:12,	161:12,	162:12,	163:12,	164:12,	165:12,	166:12,	167:12,	168:12,	169:12,	170:12,	171:12,	172:12,	173:12,	174:12,	175:12,	176:13,	177:13,	178:13,	179:13,	180:13,	181:13,	182:13,	183:13,	184:13,	185:13,	186:13,	187:13,	188:13,	189:13,	190:13,	191:13,	192:13,	193:13,	194:13,	195:13,	196:13,	197:13,	198:13,	199:13,	200:13,	201:13,	202:13,	203:13,	204:13,	205:13,	206:13,	207:13,	208:13,	209:13,	210:13,	211:13,	212:13,	213:13,	214:13,	215:13,	216:13,	217:13,	218:13,	219:13,	220:13,	221:13,	222:13,	223:13,	224:13,	225:13,	226:13,	227:13,	228:13,	229:13,	230:13,	231:13,	232:13,	233:13,	234:13,	235:13,	236:13,	237:13,	238:13,	239:13,	240:13,	241:13,	242:13,	243:13,	244:13,	245:13,	246:13,	247:13,	248:13,	249:13,	250:13,	251:13,	252:13,	253:13,	254:13,	255:13,	256:13,	257:13,	258:13,	259:13,	260:13,	261:13,	262:13,	263:13,	264:13,	265:13,	266:13,	267:13,	268:13,	269:13,	270:13,	271:13,	272:13,	273:13,	274:13,	275:13,	276:15,	277:15,	278:15,	279:15,	280:15,	281:15,	282:15,	283:15,	284:15,	285:15,	286:15,	287:15,	288:15,	289:15,	290:15,	291:15,	292:15,	293:15,	294:15,	295:15,	296:15,	297:15,	298:15,	299:15,	300:15,	301:15,	302:15,	303:15,	304:15,	305:15,	306:15,	307:15,	308:15,	309:15,	310:15,	311:15,	312:15,	313:15,	314:15,	315:15,	316:15,	317:15,	318:15,	319:15,	320:15,	321:15,	322:15,	323:15,	324:15,	325:15,	326:15,	327:15,	328:15,	329:15,	330:15,	331:15,	332:15,	333:15,	334:15,	335:15,	336:15,	337:15,	338:15,	339:15,	340:15,	341:15,	342:15,	343:15,	344:15,	345:15,	346:15,	347:15,	348:15,	349:15,	350:15,	351:15,	352:15,	353:15,	354:15,	355:15,	356:15,	357:15,	358:15,	359:15,	360:15,	361:15,	362:15,	363:15,	364:15,	365:15,	366:15,	367:15,	368:15,	369:15,	370:15,	371:15,	372:15,	373:15,	374:15,	375:15,	376:15,	377:15,	378:15,	379:15,	380:15,	381:15,	382:15,	383:15,	384:15,	385:15,	386:15,	387:15,	388:15,	389:15,	390:15,	391:15,	392:15,	393:15,	394:15,	395:15,	396:15,	397:15,	398:15,	399:15,	400:15,	401:15,	402:15,	403:15,	404:15,	405:15,	406:15,	407:15,	408:15,	409:15,	410:15,	411:15,	412:15,	413:15,	414:15,	415:15,	416:15,	417:15,	418:15,	419:15,	420:15,	421:15,	422:15,	423:15,	424:15,	425:15,	426:16,	427:16,	428:16,	429:16,	430:16,	431:16,	432:16,	433:16,	434:16,	435:16,	436:16,	437:16,	438:16,	439:16,	440:16,	441:16,	442:16,	443:16,	444:16,	445:16,	446:16,	447:16,	448:16,	449:16,	450:16,	451:16,	452:16,	453:16,	454:16,	455:16,	456:16,	457:16,	458:16,	459:16,	460:16,	461:16,	462:16,	463:16,	464:16,	465:16,	466:16,	467:16,	468:16,	469:16,	470:16,	471:16,	472:16,	473:16,	474:16,	475:16,	476:16,	477:16,	478:16,	479:16,	480:16,	481:16,	482:16,	483:16,	484:16,	485:16,	486:16,	487:16,	488:16,	489:16,	490:16,	491:16,	492:16,	493:16,	494:16,	495:16,	496:16,	497:16,	498:16,	499:16,	500:16,	501:16,	502:16,	503:16,	504:16,	505:16,	506:16,	507:16,	508:16,	509:16,	510:16,	511:16,	512:16,	513:16,	514:16,	515:16,	516:16,	517:16,	518:16,	519:16,	520:16,	521:16,	522:16,	523:16,	524:16,	525:16,	526:16,	527:16,	528:16,	529:16,	530:16,	531:16,	532:16,	533:16,	534:16,	535:16,	536:16,	537:16,	538:16,	539:16,	540:16,	541:16,	542:16,	543:16,	544:16,	545:16,	546:16,	547:16,	548:16,	549:16,	550:16,	551:16,	552:16,	553:16,	554:16,	555:16,	556:16,	557:16,	558:16,	559:16,	560:16,	561:16,	562:16,	563:16,	564:16,	565:16,	566:16,	567:16,	568:16,	569:16,	570:16,	571:16,	572:16,	573:16,	574:16,	575:16,	576:16,	577:16,	578:16,	579:16,	580:16,	581:16,	582:16,	583:16,	584:16,	585:16,	586:16,	587:16,	588:16,	589:16,	590:16,	591:16,	592:16,	593:16,	594:16,	595:16,	596:16,	597:16,	598:16,	599:16,	600:16,	601:16,	602:16,	603:16,	604:16,	605:16,	606:16,	607:16,	608:16,	609:16,	610:16,	611:16,	612:16,	613:16,	614:16,	615:16,	616:16,	617:16,	618:16,	619:16,	620:16,	621:16,	622:16,	623:16,	624:16,	625:16,	626:17,	627:17,	628:17,	629:17,	630:17,	631:17,	632:17,	633:17,	634:17,	635:17,	636:17,	637:17,	638:17,	639:17,	640:17,	641:17,	642:17,	643:17,	644:17,	645:17,	646:17,	647:17,	648:17,	649:17,	650:17,	651:17,	652:17,	653:17,	654:17,	655:17,	656:17,	657:17,	658:17,	659:17,	660:17,	661:17,	662:17,	663:17,	664:17,	665:17,	666:17,	667:17,	668:17,	669:17,	670:17,	671:17,	672:17,	673:17,	674:17,	675:17,	676:17,	677:17,	678:17,	679:17,	680:17,	681:17,	682:17,	683:17,	684:17,	685:17,	686:17,	687:17,	688:17,	689:17,	690:17,	691:17,	692:17,	693:17,	694:17,	695:17,	696:17,	697:17,	698:17,	699:17,	700:17,	701:17,	702:17,	703:17,	704:17,	705:17,	706:17,	707:17,	708:17,	709:17,	710:17,	711:17,	712:17,	713:17,	714:17,	715:17,	716:17,	717:17,	718:17,	719:17,	720:17,	721:17,	722:17,	723:17,	724:17,	725:17,	726:17,	727:17,	728:17,	729:17,	730:17,	731:17,	732:17,	733:17,	734:17,	735:17,	736:17,	737:17,	738:17,	739:17,	740:17,	741:17,	742:17,	743:17,	744:17,	745:17,	746:17,	747:17,	748:17,	749:17,	750:17,	751:17,	752:17,	753:17,	754:17,	755:17,	756:17,	757:17,	758:17,	759:17,	760:17,	761:17,	762:17,	763:17,	764:17,	765:17,	766:17,	767:17,	768:17,	769:17,	770:17,	771:17,	772:17,	773:17,	774:17,	775:17,	776:17,	777:17,	778:17,	779:17,	780:17,	781:17,	782:17,	783:17,	784:17,	785:17,	786:17,	787:17,	788:17,	789:17,	790:17,	791:17,	792:17,	793:17,	794:17,	795:17,	796:17,	797:17,	798:17,	799:17,	800:17,	801:17,	802:17,	803:17,	804:17,	805:17,	806:17,	807:17,	808:17,	809:17,	810:17,	811:17,	812:17,	813:17,	814:17,	815:17,	816:17,	817:17,	818:17,	819:17,	820:17,	821:17,	822:17,	823:17,	824:17,	825:17,	826:17,	827:17,	828:17,	829:17,	830:17,	831:17,	832:17,	833:17,	834:17,	835:17,	836:17,	837:17,	838:17,	839:17,	840:17,	841:17,	842:17,	843:17,	844:17,	845:17,	846:17,	847:17,	848:17,	849:17,	850:17,	851:17,	852:17,	853:17,	854:17,	855:17,	856:17,	857:17,	858:17,	859:17,	860:17,	861:17,	862:17,	863:17,	864:17,	865:17,	866:17,	867:17,	868:17,	869:17,	870:17,	871:17,	872:17,	873:17,	874:17,	875:17,	876:19,	877:19,	878:19,	879:19,	880:19,	881:19,	882:19,	883:19,	884:19,	885:19,	886:19,	887:19,	888:19,	889:19,	890:19,	891:19,	892:19,	893:19,	894:19,	895:19,	896:19,	897:19,	898:19,	899:19,	900:19,	901:19,	902:19,	903:19,	904:19,	905:19,	906:19,	907:19,	908:19,	909:19,	910:19,	911:19,	912:19,	913:19,	914:19,	915:19,	916:19,	917:19,	918:19,	919:19,	920:19,	921:19,	922:19,	923:19,	924:19,	925:19,	926:19,	927:19,	928:19,	929:19,	930:19,	931:19,	932:19,	933:19,	934:19,	935:19,	936:19,	937:19,	938:19,	939:19,	940:19,	941:19,	942:19,	943:19,	944:19,	945:19,	946:19,	947:19,	948:19,	949:19,	950:19,	951:19,	952:19,	953:19,	954:19,	955:19,	956:19,	957:19,	958:19,	959:19,	960:19,	961:19,	962:19,	963:19,	964:19,	965:19,	966:19,	967:19,	968:19,	969:19,	970:19,	971:19,	972:19,	973:19,	974:19,	975:19,	976:19,	977:19,	978:19,	979:19,	980:19,	981:19,	982:19,	983:19,	984:19,	985:19,	986:19,	987:19,	988:19,	989:19,	990:19,	991:19,	992:19,	993:19,	994:19,	995:19,	996:19,	997:19,	998:19,	999:19,	1000:19,	1001:19,	1002:19,	1003:19,	1004:19,	1005:19,	1006:19,	1007:19,	1008:19,	1009:19,	1010:19,	1011:19,	1012:19,	1013:19,	1014:19,	1015:19,	1016:19,	1017:19,	1018:19,	1019:19,	1020:19,	1021:19,	1022:19,	1023:19,	1024:19,	1025:19,	1026:19,	1027:19,	1028:19,	1029:19,	1030:19,	1031:19,	1032:19,	1033:19,	1034:19,	1035:19,	1036:19,	1037:19,	1038:19,	1039:19,	1040:19,	1041:19,	1042:19,	1043:19,	1044:19,	1045:19,	1046:19,	1047:19,	1048:19,	1049:19,	1050:19,	1051:19,	1052:19,	1053:19,	1054:19,	1055:19,	1056:19,	1057:19,	1058:19,	1059:19,	1060:19,	1061:19,	1062:19,	1063:19,	1064:19,	1065:19,	1066:19,	1067:19,	1068:19,	1069:19,	1070:19,	1071:19,	1072:19,	1073:19,	1074:19,	1075:19,	1076:19,	1077:19,	1078:19,	1079:19,	1080:19,	1081:19,	1082:19,	1083:19,	1084:19,	1085:19,	1086:19,	1087:19,	1088:19,	1089:19,	1090:19,	1091:19,	1092:19,	1093:19,	1094:19,	1095:19,	1096:19,	1097:19,	1098:19,	1099:19,	1100:19,	1101:19,	1102:19,	1103:19,	1104:19,	1105:19,	1106:19,	1107:19,	1108:19,	1109:19,	1110:19,	1111:19,	1112:19,	1113:19,	1114:19,	1115:19,	1116:19,	1117:19,	1118:19,	1119:19,	1120:19,	1121:19,	1122:19,	1123:19,	1124:19,	1125:19,	1126:19,	1127:19,	1128:19,	1129:19,	1130:19,	1131:19,	1132:19,	1133:19,	1134:19,	1135:19,	1136:19,	1137:19,	1138:19,	1139:19,	1140:19,	1141:19,	1142:19,	1143:19,	1144:19,	1145:19,	1146:19,	1147:19,	1148:19,	1149:19,	1150:19,	1151:19,	1152:19,	1153:19,	1154:19,	1155:19,	1156:19,	1157:19,	1158:19,	1159:19,	1160:19,	1161:19,	1162:19,	1163:19,	1164:19,	1165:19,	1166:19,	1167:19,	1168:19,	1169:19,	1170:19,	1171:19,	1172:19,	1173:19,	1174:19,	1175:19,
}
tablo_14_45_med={0:0, 1:2.5,	2:2.5,	3:2.5,	4:2.5,	5:2.5,	6:3,	7:3,	8:3,	9:3,	10:3,	11:3.5,	12:3.5,	13:3.5,	14:3.5,	15:3.5,	16:4.5,	17:4.5,	18:4.5,	19:4.5,	20:4.5,	21:4.5,	22:4.5,	23:4.5,	24:4.5,	25:4.5,	26:5.5,	27:5.5,	28:5.5,	29:5.5,	30:5.5,	31:5.5,	32:5.5,	33:5.5,	34:5.5,	35:5.5,	36:5.5,	37:5.5,	38:5.5,	39:5.5,	40:5.5,	41:5.5,	42:5.5,	43:5.5,	44:5.5,	45:5.5,	46:6,	47:6,	48:6,	49:6,	50:6,	51:6,	52:6,	53:6,	54:6,	55:6,	56:6,	57:6,	58:6,	59:6,	60:6,	61:6,	62:6,	63:6,	64:6,	65:6,	66:7,	67:7,	68:7,	69:7,	70:7,	71:7,	72:7,	73:7,	74:7,	75:7,	76:7,	77:7,	78:7,	79:7,	80:7,	81:7,	82:7,	83:7,	84:7,	85:7,	86:8,	87:8,	88:8,	89:8,	90:8,	91:8,	92:8,	93:8,	94:8,	95:8,	96:8,	97:8,	98:8,	99:8,	100:8,	101:8,	102:8,	103:8,	104:8,	105:8,	106:8,	107:8,	108:8,	109:8,	110:8,	111:8,	112:8,	113:8,	114:8,	115:8,	116:8,	117:8,	118:8,	119:8,	120:8,	121:8,	122:8,	123:8,	124:8,	125:8,	126:9,	127:9,	128:9,	129:9,	130:9,	131:9,	132:9,	133:9,	134:9,	135:9,	136:9,	137:9,	138:9,	139:9,	140:9,	141:9,	142:9,	143:9,	144:9,	145:9,	146:9,	147:9,	148:9,	149:9,	150:9,	151:9,	152:9,	153:9,	154:9,	155:9,	156:9,	157:9,	158:9,	159:9,	160:9,	161:9,	162:9,	163:9,	164:9,	165:9,	166:9,	167:9,	168:9,	169:9,	170:9,	171:9,	172:9,	173:9,	174:9,	175:9,	176:10,	177:10,	178:10,	179:10,	180:10,	181:10,	182:10,	183:10,	184:10,	185:10,	186:10,	187:10,	188:10,	189:10,	190:10,	191:10,	192:10,	193:10,	194:10,	195:10,	196:10,	197:10,	198:10,	199:10,	200:10,	201:10,	202:10,	203:10,	204:10,	205:10,	206:10,	207:10,	208:10,	209:10,	210:10,	211:10,	212:10,	213:10,	214:10,	215:10,	216:10,	217:10,	218:10,	219:10,	220:10,	221:10,	222:10,	223:10,	224:10,	225:10,	226:10,	227:10,	228:10,	229:10,	230:10,	231:10,	232:10,	233:10,	234:10,	235:10,	236:10,	237:10,	238:10,	239:10,	240:10,	241:10,	242:10,	243:10,	244:10,	245:10,	246:10,	247:10,	248:10,	249:10,	250:10,	251:10,	252:10,	253:10,	254:10,	255:10,	256:10,	257:10,	258:10,	259:10,	260:10,	261:10,	262:10,	263:10,	264:10,	265:10,	266:10,	267:10,	268:10,	269:10,	270:10,	271:10,	272:10,	273:10,	274:10,	275:10,	276:11,	277:11,	278:11,	279:11,	280:11,	281:11,	282:11,	283:11,	284:11,	285:11,	286:11,	287:11,	288:11,	289:11,	290:11,	291:11,	292:11,	293:11,	294:11,	295:11,	296:11,	297:11,	298:11,	299:11,	300:11,	301:11,	302:11,	303:11,	304:11,	305:11,	306:11,	307:11,	308:11,	309:11,	310:11,	311:11,	312:11,	313:11,	314:11,	315:11,	316:11,	317:11,	318:11,	319:11,	320:11,	321:11,	322:11,	323:11,	324:11,	325:11,	326:11,	327:11,	328:11,	329:11,	330:11,	331:11,	332:11,	333:11,	334:11,	335:11,	336:11,	337:11,	338:11,	339:11,	340:11,	341:11,	342:11,	343:11,	344:11,	345:11,	346:11,	347:11,	348:11,	349:11,	350:11,	351:11,	352:11,	353:11,	354:11,	355:11,	356:11,	357:11,	358:11,	359:11,	360:11,	361:11,	362:11,	363:11,	364:11,	365:11,	366:11,	367:11,	368:11,	369:11,	370:11,	371:11,	372:11,	373:11,	374:11,	375:11,	376:11,	377:11,	378:11,	379:11,	380:11,	381:11,	382:11,	383:11,	384:11,	385:11,	386:11,	387:11,	388:11,	389:11,	390:11,	391:11,	392:11,	393:11,	394:11,	395:11,	396:11,	397:11,	398:11,	399:11,	400:11,	401:11,	402:11,	403:11,	404:11,	405:11,	406:11,	407:11,	408:11,	409:11,	410:11,	411:11,	412:11,	413:11,	414:11,	415:11,	416:11,	417:11,	418:11,	419:11,	420:11,	421:11,	422:11,	423:11,	424:11,	425:11,	426:12,	427:12,	428:12,	429:12,	430:12,	431:12,	432:12,	433:12,	434:12,	435:12,	436:12,	437:12,	438:12,	439:12,	440:12,	441:12,	442:12,	443:12,	444:12,	445:12,	446:12,	447:12,	448:12,	449:12,	450:12,	451:12,	452:12,	453:12,	454:12,	455:12,	456:12,	457:12,	458:12,	459:12,	460:12,	461:12,	462:12,	463:12,	464:12,	465:12,	466:12,	467:12,	468:12,	469:12,	470:12,	471:12,	472:12,	473:12,	474:12,	475:12,	476:12,	477:12,	478:12,	479:12,	480:12,	481:12,	482:12,	483:12,	484:12,	485:12,	486:12,	487:12,	488:12,	489:12,	490:12,	491:12,	492:12,	493:12,	494:12,	495:12,	496:12,	497:12,	498:12,	499:12,	500:12,	501:12,	502:12,	503:12,	504:12,	505:12,	506:12,	507:12,	508:12,	509:12,	510:12,	511:12,	512:12,	513:12,	514:12,	515:12,	516:12,	517:12,	518:12,	519:12,	520:12,	521:12,	522:12,	523:12,	524:12,	525:12,	526:12,	527:12,	528:12,	529:12,	530:12,	531:12,	532:12,	533:12,	534:12,	535:12,	536:12,	537:12,	538:12,	539:12,	540:12,	541:12,	542:12,	543:12,	544:12,	545:12,	546:12,	547:12,	548:12,	549:12,	550:12,	551:12,	552:12,	553:12,	554:12,	555:12,	556:12,	557:12,	558:12,	559:12,	560:12,	561:12,	562:12,	563:12,	564:12,	565:12,	566:12,	567:12,	568:12,	569:12,	570:12,	571:12,	572:12,	573:12,	574:12,	575:12,	576:12,	577:12,	578:12,	579:12,	580:12,	581:12,	582:12,	583:12,	584:12,	585:12,	586:12,	587:12,	588:12,	589:12,	590:12,	591:12,	592:12,	593:12,	594:12,	595:12,	596:12,	597:12,	598:12,	599:12,	600:12,	601:12,	602:12,	603:12,	604:12,	605:12,	606:12,	607:12,	608:12,	609:12,	610:12,	611:12,	612:12,	613:12,	614:12,	615:12,	616:12,	617:12,	618:12,	619:12,	620:12,	621:12,	622:12,	623:12,	624:12,	625:12,	626:13,	627:13,	628:13,	629:13,	630:13,	631:13,	632:13,	633:13,	634:13,	635:13,	636:13,	637:13,	638:13,	639:13,	640:13,	641:13,	642:13,	643:13,	644:13,	645:13,	646:13,	647:13,	648:13,	649:13,	650:13,	651:13,	652:13,	653:13,	654:13,	655:13,	656:13,	657:13,	658:13,	659:13,	660:13,	661:13,	662:13,	663:13,	664:13,	665:13,	666:13,	667:13,	668:13,	669:13,	670:13,	671:13,	672:13,	673:13,	674:13,	675:13,	676:13,	677:13,	678:13,	679:13,	680:13,	681:13,	682:13,	683:13,	684:13,	685:13,	686:13,	687:13,	688:13,	689:13,	690:13,	691:13,	692:13,	693:13,	694:13,	695:13,	696:13,	697:13,	698:13,	699:13,	700:13,	701:13,	702:13,	703:13,	704:13,	705:13,	706:13,	707:13,	708:13,	709:13,	710:13,	711:13,	712:13,	713:13,	714:13,	715:13,	716:13,	717:13,	718:13,	719:13,	720:13,	721:13,	722:13,	723:13,	724:13,	725:13,	726:13,	727:13,	728:13,	729:13,	730:13,	731:13,	732:13,	733:13,	734:13,	735:13,	736:13,	737:13,	738:13,	739:13,	740:13,	741:13,	742:13,	743:13,	744:13,	745:13,	746:13,	747:13,	748:13,	749:13,	750:13,	751:13,	752:13,	753:13,	754:13,	755:13,	756:13,	757:13,	758:13,	759:13,	760:13,	761:13,	762:13,	763:13,	764:13,	765:13,	766:13,	767:13,	768:13,	769:13,	770:13,	771:13,	772:13,	773:13,	774:13,	775:13,	776:13,	777:13,	778:13,	779:13,	780:13,	781:13,	782:13,	783:13,	784:13,	785:13,	786:13,	787:13,	788:13,	789:13,	790:13,	791:13,	792:13,	793:13,	794:13,	795:13,	796:13,	797:13,	798:13,	799:13,	800:13,	801:13,	802:13,	803:13,	804:13,	805:13,	806:13,	807:13,	808:13,	809:13,	810:13,	811:13,	812:13,	813:13,	814:13,	815:13,	816:13,	817:13,	818:13,	819:13,	820:13,	821:13,	822:13,	823:13,	824:13,	825:13,	826:13,	827:13,	828:13,	829:13,	830:13,	831:13,	832:13,	833:13,	834:13,	835:13,	836:13,	837:13,	838:13,	839:13,	840:13,	841:13,	842:13,	843:13,	844:13,	845:13,	846:13,	847:13,	848:13,	849:13,	850:13,	851:13,	852:13,	853:13,	854:13,	855:13,	856:13,	857:13,	858:13,	859:13,	860:13,	861:13,	862:13,	863:13,	864:13,	865:13,	866:13,	867:13,	868:13,	869:13,	870:13,	871:13,	872:13,	873:13,	874:13,	875:13,	876:15,	877:15,	878:15,	879:15,	880:15,	881:15,	882:15,	883:15,	884:15,	885:15,	886:15,	887:15,	888:15,	889:15,	890:15,	891:15,	892:15,	893:15,	894:15,	895:15,	896:15,	897:15,	898:15,	899:15,	900:15,	901:15,	902:15,	903:15,	904:15,	905:15,	906:15,	907:15,	908:15,	909:15,	910:15,	911:15,	912:15,	913:15,	914:15,	915:15,	916:15,	917:15,	918:15,	919:15,	920:15,	921:15,	922:15,	923:15,	924:15,	925:15,	926:15,	927:15,	928:15,	929:15,	930:15,	931:15,	932:15,	933:15,	934:15,	935:15,	936:15,	937:15,	938:15,	939:15,	940:15,	941:15,	942:15,	943:15,	944:15,	945:15,	946:15,	947:15,	948:15,	949:15,	950:15,	951:15,	952:15,	953:15,	954:15,	955:15,	956:15,	957:15,	958:15,	959:15,	960:15,	961:15,	962:15,	963:15,	964:15,	965:15,	966:15,	967:15,	968:15,	969:15,	970:15,	971:15,	972:15,	973:15,	974:15,	975:15,	976:15,	977:15,	978:15,	979:15,	980:15,	981:15,	982:15,	983:15,	984:15,	985:15,	986:15,	987:15,	988:15,	989:15,	990:15,	991:15,	992:15,	993:15,	994:15,	995:15,	996:15,	997:15,	998:15,	999:15,	1000:15,	1001:15,	1002:15,	1003:15,	1004:15,	1005:15,	1006:15,	1007:15,	1008:15,	1009:15,	1010:15,	1011:15,	1012:15,	1013:15,	1014:15,	1015:15,	1016:15,	1017:15,	1018:15,	1019:15,	1020:15,	1021:15,	1022:15,	1023:15,	1024:15,	1025:15,	1026:15,	1027:15,	1028:15,	1029:15,	1030:15,	1031:15,	1032:15,	1033:15,	1034:15,	1035:15,	1036:15,	1037:15,	1038:15,	1039:15,	1040:15,	1041:15,	1042:15,	1043:15,	1044:15,	1045:15,	1046:15,	1047:15,	1048:15,	1049:15,	1050:15,	1051:15,	1052:15,	1053:15,	1054:15,	1055:15,	1056:15,	1057:15,	1058:15,	1059:15,	1060:15,	1061:15,	1062:15,	1063:15,	1064:15,	1065:15,	1066:15,	1067:15,	1068:15,	1069:15,	1070:15,	1071:15,	1072:15,	1073:15,	1074:15,	1075:15,	1076:15,	1077:15,	1078:15,	1079:15,	1080:15,	1081:15,	1082:15,	1083:15,	1084:15,	1085:15,	1086:15,	1087:15,	1088:15,	1089:15,	1090:15,	1091:15,	1092:15,	1093:15,	1094:15,	1095:15,	1096:15,	1097:15,	1098:15,	1099:15,	1100:15,	1101:15,	1102:15,	1103:15,	1104:15,	1105:15,	1106:15,	1107:15,	1108:15,	1109:15,	1110:15,	1111:15,	1112:15,	1113:15,	1114:15,	1115:15,	1116:15,	1117:15,	1118:15,	1119:15,	1120:15,	1121:15,	1122:15,	1123:15,	1124:15,	1125:15,	1126:15,	1127:15,	1128:15,	1129:15,	1130:15,	1131:15,	1132:15,	1133:15,	1134:15,	1135:15,	1136:15,	1137:15,	1138:15,	1139:15,	1140:15,	1141:15,	1142:15,	1143:15,	1144:15,	1145:15,	1146:15,	1147:15,	1148:15,	1149:15,	1150:15,	1151:15,	1152:15,	1153:15,	1154:15,	1155:15,	1156:15,	1157:15,	1158:15,	1159:15,	1160:15,	1161:15,	1162:15,	1163:15,	1164:15,	1165:15,	1166:15,	1167:15,	1168:15,	1169:15,	1170:15,	1171:15,	1172:15,	1173:15,	1174:15,	1175:15,
}
tablo_14_45_low={0:0, 1:2.5,	2:2.5,	3:2.5,	4:2.5,	5:2.5,	6:3,	7:3,	8:3,	9:3,	10:3,	11:3,	12:3,	13:3,	14:3,	15:3,	16:3.5,	17:3.5,	18:3.5,	19:3.5,	20:3.5,	21:3.5,	22:3.5,	23:3.5,	24:3.5,	25:3.5,	26:4,	27:4,	28:4,	29:4,	30:4,	31:4,	32:4,	33:4,	34:4,	35:4,	36:4,	37:4,	38:4,	39:4,	40:4,	41:4,	42:4,	43:4,	44:4,	45:4,	46:4.5,	47:4.5,	48:4.5,	49:4.5,	50:4.5,	51:4.5,	52:4.5,	53:4.5,	54:4.5,	55:4.5,	56:4.5,	57:4.5,	58:4.5,	59:4.5,	60:4.5,	61:4.5,	62:4.5,	63:4.5,	64:4.5,	65:4.5,	66:5,	67:5,	68:5,	69:5,	70:5,	71:5,	72:5,	73:5,	74:5,	75:5,	76:5,	77:5,	78:5,	79:5,	80:5,	81:5,	82:5,	83:5,	84:5,	85:5,	86:5.5,	87:5.5,	88:5.5,	89:5.5,	90:5.5,	91:5.5,	92:5.5,	93:5.5,	94:5.5,	95:5.5,	96:5.5,	97:5.5,	98:5.5,	99:5.5,	100:5.5,	101:5.5,	102:5.5,	103:5.5,	104:5.5,	105:5.5,	106:5.5,	107:5.5,	108:5.5,	109:5.5,	110:5.5,	111:5.5,	112:5.5,	113:5.5,	114:5.5,	115:5.5,	116:5.5,	117:5.5,	118:5.5,	119:5.5,	120:5.5,	121:5.5,	122:5.5,	123:5.5,	124:5.5,	125:5.5,	126:6,	127:6,	128:6,	129:6,	130:6,	131:6,	132:6,	133:6,	134:6,	135:6,	136:6,	137:6,	138:6,	139:6,	140:6,	141:6,	142:6,	143:6,	144:6,	145:6,	146:6,	147:6,	148:6,	149:6,	150:6,	151:6,	152:6,	153:6,	154:6,	155:6,	156:6,	157:6,	158:6,	159:6,	160:6,	161:6,	162:6,	163:6,	164:6,	165:6,	166:6,	167:6,	168:6,	169:6,	170:6,	171:6,	172:6,	173:6,	174:6,	175:6,	176:7,	177:7,	178:7,	179:7,	180:7,	181:7,	182:7,	183:7,	184:7,	185:7,	186:7,	187:7,	188:7,	189:7,	190:7,	191:7,	192:7,	193:7,	194:7,	195:7,	196:7,	197:7,	198:7,	199:7,	200:7,	201:7,	202:7,	203:7,	204:7,	205:7,	206:7,	207:7,	208:7,	209:7,	210:7,	211:7,	212:7,	213:7,	214:7,	215:7,	216:7,	217:7,	218:7,	219:7,	220:7,	221:7,	222:7,	223:7,	224:7,	225:7,	226:7,	227:7,	228:7,	229:7,	230:7,	231:7,	232:7,	233:7,	234:7,	235:7,	236:7,	237:7,	238:7,	239:7,	240:7,	241:7,	242:7,	243:7,	244:7,	245:7,	246:7,	247:7,	248:7,	249:7,	250:7,	251:7,	252:7,	253:7,	254:7,	255:7,	256:7,	257:7,	258:7,	259:7,	260:7,	261:7,	262:7,	263:7,	264:7,	265:7,	266:7,	267:7,	268:7,	269:7,	270:7,	271:7,	272:7,	273:7,	274:7,	275:7,	276:8,	277:8,	278:8,	279:8,	280:8,	281:8,	282:8,	283:8,	284:8,	285:8,	286:8,	287:8,	288:8,	289:8,	290:8,	291:8,	292:8,	293:8,	294:8,	295:8,	296:8,	297:8,	298:8,	299:8,	300:8,	301:8,	302:8,	303:8,	304:8,	305:8,	306:8,	307:8,	308:8,	309:8,	310:8,	311:8,	312:8,	313:8,	314:8,	315:8,	316:8,	317:8,	318:8,	319:8,	320:8,	321:8,	322:8,	323:8,	324:8,	325:8,	326:8,	327:8,	328:8,	329:8,	330:8,	331:8,	332:8,	333:8,	334:8,	335:8,	336:8,	337:8,	338:8,	339:8,	340:8,	341:8,	342:8,	343:8,	344:8,	345:8,	346:8,	347:8,	348:8,	349:8,	350:8,	351:8,	352:8,	353:8,	354:8,	355:8,	356:8,	357:8,	358:8,	359:8,	360:8,	361:8,	362:8,	363:8,	364:8,	365:8,	366:8,	367:8,	368:8,	369:8,	370:8,	371:8,	372:8,	373:8,	374:8,	375:8,	376:8,	377:8,	378:8,	379:8,	380:8,	381:8,	382:8,	383:8,	384:8,	385:8,	386:8,	387:8,	388:8,	389:8,	390:8,	391:8,	392:8,	393:8,	394:8,	395:8,	396:8,	397:8,	398:8,	399:8,	400:8,	401:8,	402:8,	403:8,	404:8,	405:8,	406:8,	407:8,	408:8,	409:8,	410:8,	411:8,	412:8,	413:8,	414:8,	415:8,	416:8,	417:8,	418:8,	419:8,	420:8,	421:8,	422:8,	423:8,	424:8,	425:8,	426:9,	427:9,	428:9,	429:9,	430:9,	431:9,	432:9,	433:9,	434:9,	435:9,	436:9,	437:9,	438:9,	439:9,	440:9,	441:9,	442:9,	443:9,	444:9,	445:9,	446:9,	447:9,	448:9,	449:9,	450:9,	451:9,	452:9,	453:9,	454:9,	455:9,	456:9,	457:9,	458:9,	459:9,	460:9,	461:9,	462:9,	463:9,	464:9,	465:9,	466:9,	467:9,	468:9,	469:9,	470:9,	471:9,	472:9,	473:9,	474:9,	475:9,	476:9,	477:9,	478:9,	479:9,	480:9,	481:9,	482:9,	483:9,	484:9,	485:9,	486:9,	487:9,	488:9,	489:9,	490:9,	491:9,	492:9,	493:9,	494:9,	495:9,	496:9,	497:9,	498:9,	499:9,	500:9,	501:9,	502:9,	503:9,	504:9,	505:9,	506:9,	507:9,	508:9,	509:9,	510:9,	511:9,	512:9,	513:9,	514:9,	515:9,	516:9,	517:9,	518:9,	519:9,	520:9,	521:9,	522:9,	523:9,	524:9,	525:9,	526:9,	527:9,	528:9,	529:9,	530:9,	531:9,	532:9,	533:9,	534:9,	535:9,	536:9,	537:9,	538:9,	539:9,	540:9,	541:9,	542:9,	543:9,	544:9,	545:9,	546:9,	547:9,	548:9,	549:9,	550:9,	551:9,	552:9,	553:9,	554:9,	555:9,	556:9,	557:9,	558:9,	559:9,	560:9,	561:9,	562:9,	563:9,	564:9,	565:9,	566:9,	567:9,	568:9,	569:9,	570:9,	571:9,	572:9,	573:9,	574:9,	575:9,	576:9,	577:9,	578:9,	579:9,	580:9,	581:9,	582:9,	583:9,	584:9,	585:9,	586:9,	587:9,	588:9,	589:9,	590:9,	591:9,	592:9,	593:9,	594:9,	595:9,	596:9,	597:9,	598:9,	599:9,	600:9,	601:9,	602:9,	603:9,	604:9,	605:9,	606:9,	607:9,	608:9,	609:9,	610:9,	611:9,	612:9,	613:9,	614:9,	615:9,	616:9,	617:9,	618:9,	619:9,	620:9,	621:9,	622:9,	623:9,	624:9,	625:9,	626:10,	627:10,	628:10,	629:10,	630:10,	631:10,	632:10,	633:10,	634:10,	635:10,	636:10,	637:10,	638:10,	639:10,	640:10,	641:10,	642:10,	643:10,	644:10,	645:10,	646:10,	647:10,	648:10,	649:10,	650:10,	651:10,	652:10,	653:10,	654:10,	655:10,	656:10,	657:10,	658:10,	659:10,	660:10,	661:10,	662:10,	663:10,	664:10,	665:10,	666:10,	667:10,	668:10,	669:10,	670:10,	671:10,	672:10,	673:10,	674:10,	675:10,	676:10,	677:10,	678:10,	679:10,	680:10,	681:10,	682:10,	683:10,	684:10,	685:10,	686:10,	687:10,	688:10,	689:10,	690:10,	691:10,	692:10,	693:10,	694:10,	695:10,	696:10,	697:10,	698:10,	699:10,	700:10,	701:10,	702:10,	703:10,	704:10,	705:10,	706:10,	707:10,	708:10,	709:10,	710:10,	711:10,	712:10,	713:10,	714:10,	715:10,	716:10,	717:10,	718:10,	719:10,	720:10,	721:10,	722:10,	723:10,	724:10,	725:10,	726:10,	727:10,	728:10,	729:10,	730:10,	731:10,	732:10,	733:10,	734:10,	735:10,	736:10,	737:10,	738:10,	739:10,	740:10,	741:10,	742:10,	743:10,	744:10,	745:10,	746:10,	747:10,	748:10,	749:10,	750:10,	751:10,	752:10,	753:10,	754:10,	755:10,	756:10,	757:10,	758:10,	759:10,	760:10,	761:10,	762:10,	763:10,	764:10,	765:10,	766:10,	767:10,	768:10,	769:10,	770:10,	771:10,	772:10,	773:10,	774:10,	775:10,	776:10,	777:10,	778:10,	779:10,	780:10,	781:10,	782:10,	783:10,	784:10,	785:10,	786:10,	787:10,	788:10,	789:10,	790:10,	791:10,	792:10,	793:10,	794:10,	795:10,	796:10,	797:10,	798:10,	799:10,	800:10,	801:10,	802:10,	803:10,	804:10,	805:10,	806:10,	807:10,	808:10,	809:10,	810:10,	811:10,	812:10,	813:10,	814:10,	815:10,	816:10,	817:10,	818:10,	819:10,	820:10,	821:10,	822:10,	823:10,	824:10,	825:10,	826:10,	827:10,	828:10,	829:10,	830:10,	831:10,	832:10,	833:10,	834:10,	835:10,	836:10,	837:10,	838:10,	839:10,	840:10,	841:10,	842:10,	843:10,	844:10,	845:10,	846:10,	847:10,	848:10,	849:10,	850:10,	851:10,	852:10,	853:10,	854:10,	855:10,	856:10,	857:10,	858:10,	859:10,	860:10,	861:10,	862:10,	863:10,	864:10,	865:10,	866:10,	867:10,	868:10,	869:10,	870:10,	871:10,	872:10,	873:10,	874:10,	875:10,	876:11,	877:11,	878:11,	879:11,	880:11,	881:11,	882:11,	883:11,	884:11,	885:11,	886:11,	887:11,	888:11,	889:11,	890:11,	891:11,	892:11,	893:11,	894:11,	895:11,	896:11,	897:11,	898:11,	899:11,	900:11,	901:11,	902:11,	903:11,	904:11,	905:11,	906:11,	907:11,	908:11,	909:11,	910:11,	911:11,	912:11,	913:11,	914:11,	915:11,	916:11,	917:11,	918:11,	919:11,	920:11,	921:11,	922:11,	923:11,	924:11,	925:11,	926:11,	927:11,	928:11,	929:11,	930:11,	931:11,	932:11,	933:11,	934:11,	935:11,	936:11,	937:11,	938:11,	939:11,	940:11,	941:11,	942:11,	943:11,	944:11,	945:11,	946:11,	947:11,	948:11,	949:11,	950:11,	951:11,	952:11,	953:11,	954:11,	955:11,	956:11,	957:11,	958:11,	959:11,	960:11,	961:11,	962:11,	963:11,	964:11,	965:11,	966:11,	967:11,	968:11,	969:11,	970:11,	971:11,	972:11,	973:11,	974:11,	975:11,	976:11,	977:11,	978:11,	979:11,	980:11,	981:11,	982:11,	983:11,	984:11,	985:11,	986:11,	987:11,	988:11,	989:11,	990:11,	991:11,	992:11,	993:11,	994:11,	995:11,	996:11,	997:11,	998:11,	999:11,	1000:11,	1001:11,	1002:11,	1003:11,	1004:11,	1005:11,	1006:11,	1007:11,	1008:11,	1009:11,	1010:11,	1011:11,	1012:11,	1013:11,	1014:11,	1015:11,	1016:11,	1017:11,	1018:11,	1019:11,	1020:11,	1021:11,	1022:11,	1023:11,	1024:11,	1025:11,	1026:11,	1027:11,	1028:11,	1029:11,	1030:11,	1031:11,	1032:11,	1033:11,	1034:11,	1035:11,	1036:11,	1037:11,	1038:11,	1039:11,	1040:11,	1041:11,	1042:11,	1043:11,	1044:11,	1045:11,	1046:11,	1047:11,	1048:11,	1049:11,	1050:11,	1051:11,	1052:11,	1053:11,	1054:11,	1055:11,	1056:11,	1057:11,	1058:11,	1059:11,	1060:11,	1061:11,	1062:11,	1063:11,	1064:11,	1065:11,	1066:11,	1067:11,	1068:11,	1069:11,	1070:11,	1071:11,	1072:11,	1073:11,	1074:11,	1075:11,	1076:11,	1077:11,	1078:11,	1079:11,	1080:11,	1081:11,	1082:11,	1083:11,	1084:11,	1085:11,	1086:11,	1087:11,	1088:11,	1089:11,	1090:11,	1091:11,	1092:11,	1093:11,	1094:11,	1095:11,	1096:11,	1097:11,	1098:11,	1099:11,	1100:11,	1101:11,	1102:11,	1103:11,	1104:11,	1105:11,	1106:11,	1107:11,	1108:11,	1109:11,	1110:11,	1111:11,	1112:11,	1113:11,	1114:11,	1115:11,	1116:11,	1117:11,	1118:11,	1119:11,	1120:11,	1121:11,	1122:11,	1123:11,	1124:11,	1125:11,	1126:11,	1127:11,	1128:11,	1129:11,	1130:11,	1131:11,	1132:11,	1133:11,	1134:11,	1135:11,	1136:11,	1137:11,	1138:11,	1139:11,	1140:11,	1141:11,	1142:11,	1143:11,	1144:11,	1145:11,	1146:11,	1147:11,	1148:11,	1149:11,	1150:11,	1151:11,	1152:11,	1153:11,	1154:11,	1155:11,	1156:11,	1157:11,	1158:11,	1159:11,	1160:11,	1161:11,	1162:11,	1163:11,	1164:11,	1165:11,	1166:11,	1167:11,	1168:11,	1169:11,	1170:11,	1171:11,	1172:11,	1173:11,	1174:11,	1175:11,
}
tablo_14_lim={1:2.5,	2:2.5,	3:2.5,	4:2.5,	5:2.5,	6:3,	7:3,	8:3,	9:3,	10:3,	11:3,	12:3,	13:3,	14:3,	15:3,	16:3,	17:3,	18:3,	19:3,	20:3,	21:3,	22:3,	23:3,	24:3,	25:3,	26:3,	27:3,	28:3,	29:3,	30:3,	31:3,	32:3,	33:3,	34:3,	35:3,	36:3,	37:3,	38:3,	39:3,	40:3,	41:3,	42:3,	43:3,	44:3,	45:3,	46:3.5,	47:3.5,	48:3.5,	49:3.5,	50:3.5,	51:3.5,	52:3.5,	53:3.5,	54:3.5,	55:3.5,	56:3.5,	57:3.5,	58:3.5,	59:3.5,	60:3.5,	61:3.5,	62:3.5,	63:3.5,	64:3.5,	65:3.5,	66:3.5,	67:3.5,	68:3.5,	69:3.5,	70:3.5,	71:3.5,	72:3.5,	73:3.5,	74:3.5,	75:3.5,	76:3.5,	77:3.5,	78:3.5,	79:3.5,	80:3.5,	81:3.5,	82:3.5,	83:3.5,	84:3.5,	85:3.5,	86:4,	87:4,	88:4,	89:4,	90:4,	91:4,	92:4,	93:4,	94:4,	95:4,	96:4,	97:4,	98:4,	99:4,	100:4,	101:4,	102:4,	103:4,	104:4,	105:4,	106:4,	107:4,	108:4,	109:4,	110:4,	111:4,	112:4,	113:4,	114:4,	115:4,	116:4,	117:4,	118:4,	119:4,	120:4,	121:4,	122:4,	123:4,	124:4,	125:4,	126:4.5,	127:4.5,	128:4.5,	129:4.5,	130:4.5,	131:4.5,	132:4.5,	133:4.5,	134:4.5,	135:4.5,	136:4.5,	137:4.5,	138:4.5,	139:4.5,	140:4.5,	141:4.5,	142:4.5,	143:4.5,	144:4.5,	145:4.5,	146:4.5,	147:4.5,	148:4.5,	149:4.5,	150:4.5,	151:4.5,	152:4.5,	153:4.5,	154:4.5,	155:4.5,	156:4.5,	157:4.5,	158:4.5,	159:4.5,	160:4.5,	161:4.5,	162:4.5,	163:4.5,	164:4.5,	165:4.5,	166:4.5,	167:4.5,	168:4.5,	169:4.5,	170:4.5,	171:4.5,	172:4.5,	173:4.5,	174:4.5,	175:4.5,	176:5,	177:5,	178:5,	179:5,	180:5,	181:5,	182:5,	183:5,	184:5,	185:5,	186:5,	187:5,	188:5,	189:5,	190:5,	191:5,	192:5,	193:5,	194:5,	195:5,	196:5,	197:5,	198:5,	199:5,	200:5,	201:5,	202:5,	203:5,	204:5,	205:5,	206:5,	207:5,	208:5,	209:5,	210:5,	211:5,	212:5,	213:5,	214:5,	215:5,	216:5,	217:5,	218:5,	219:5,	220:5,	221:5,	222:5,	223:5,	224:5,	225:5,	226:5,	227:5,	228:5,	229:5,	230:5,	231:5,	232:5,	233:5,	234:5,	235:5,	236:5,	237:5,	238:5,	239:5,	240:5,	241:5,	242:5,	243:5,	244:5,	245:5,	246:5,	247:5,	248:5,	249:5,	250:5,	251:5,	252:5,	253:5,	254:5,	255:5,	256:5,	257:5,	258:5,	259:5,	260:5,	261:5,	262:5,	263:5,	264:5,	265:5,	266:5,	267:5,	268:5,	269:5,	270:5,	271:5,	272:5,	273:5,	274:5,	275:5,	276:5.5,	277:5.5,	278:5.5,	279:5.5,	280:5.5,	281:5.5,	282:5.5,	283:5.5,	284:5.5,	285:5.5,	286:5.5,	287:5.5,	288:5.5,	289:5.5,	290:5.5,	291:5.5,	292:5.5,	293:5.5,	294:5.5,	295:5.5,	296:5.5,	297:5.5,	298:5.5,	299:5.5,	300:5.5,	301:5.5,	302:5.5,	303:5.5,	304:5.5,	305:5.5,	306:5.5,	307:5.5,	308:5.5,	309:5.5,	310:5.5,	311:5.5,	312:5.5,	313:5.5,	314:5.5,	315:5.5,	316:5.5,	317:5.5,	318:5.5,	319:5.5,	320:5.5,	321:5.5,	322:5.5,	323:5.5,	324:5.5,	325:5.5,	326:5.5,	327:5.5,	328:5.5,	329:5.5,	330:5.5,	331:5.5,	332:5.5,	333:5.5,	334:5.5,	335:5.5,	336:5.5,	337:5.5,	338:5.5,	339:5.5,	340:5.5,	341:5.5,	342:5.5,	343:5.5,	344:5.5,	345:5.5,	346:5.5,	347:5.5,	348:5.5,	349:5.5,	350:5.5,	351:5.5,	352:5.5,	353:5.5,	354:5.5,	355:5.5,	356:5.5,	357:5.5,	358:5.5,	359:5.5,	360:5.5,	361:5.5,	362:5.5,	363:5.5,	364:5.5,	365:5.5,	366:5.5,	367:5.5,	368:5.5,	369:5.5,	370:5.5,	371:5.5,	372:5.5,	373:5.5,	374:5.5,	375:5.5,	376:5.5,	377:5.5,	378:5.5,	379:5.5,	380:5.5,	381:5.5,	382:5.5,	383:5.5,	384:5.5,	385:5.5,	386:5.5,	387:5.5,	388:5.5,	389:5.5,	390:5.5,	391:5.5,	392:5.5,	393:5.5,	394:5.5,	395:5.5,	396:5.5,	397:5.5,	398:5.5,	399:5.5,	400:5.5,	401:5.5,	402:5.5,	403:5.5,	404:5.5,	405:5.5,	406:5.5,	407:5.5,	408:5.5,	409:5.5,	410:5.5,	411:5.5,	412:5.5,	413:5.5,	414:5.5,	415:5.5,	416:5.5,	417:5.5,	418:5.5,	419:5.5,	420:5.5,	421:5.5,	422:5.5,	423:5.5,	424:5.5,	425:5.5,	426:6,	427:6,	428:6,	429:6,	430:6,	431:6,	432:6,	433:6,	434:6,	435:6,	436:6,	437:6,	438:6,	439:6,	440:6,	441:6,	442:6,	443:6,	444:6,	445:6,	446:6,	447:6,	448:6,	449:6,	450:6,	451:6,	452:6,	453:6,	454:6,	455:6,	456:6,	457:6,	458:6,	459:6,	460:6,	461:6,	462:6,	463:6,	464:6,	465:6,	466:6,	467:6,	468:6,	469:6,	470:6,	471:6,	472:6,	473:6,	474:6,	475:6,	476:6,	477:6,	478:6,	479:6,	480:6,	481:6,	482:6,	483:6,	484:6,	485:6,	486:6,	487:6,	488:6,	489:6,	490:6,	491:6,	492:6,	493:6,	494:6,	495:6,	496:6,	497:6,	498:6,	499:6,	500:6,	501:6,	502:6,	503:6,	504:6,	505:6,	506:6,	507:6,	508:6,	509:6,	510:6,	511:6,	512:6,	513:6,	514:6,	515:6,	516:6,	517:6,	518:6,	519:6,	520:6,	521:6,	522:6,	523:6,	524:6,	525:6,	526:6,	527:6,	528:6,	529:6,	530:6,	531:6,	532:6,	533:6,	534:6,	535:6,	536:6,	537:6,	538:6,	539:6,	540:6,	541:6,	542:6,	543:6,	544:6,	545:6,	546:6,	547:6,	548:6,	549:6,	550:6,	551:6,	552:6,	553:6,	554:6,	555:6,	556:6,	557:6,	558:6,	559:6,	560:6,	561:6,	562:6,	563:6,	564:6,	565:6,	566:6,	567:6,	568:6,	569:6,	570:6,	571:6,	572:6,	573:6,	574:6,	575:6,	576:6,	577:6,	578:6,	579:6,	580:6,	581:6,	582:6,	583:6,	584:6,	585:6,	586:6,	587:6,	588:6,	589:6,	590:6,	591:6,	592:6,	593:6,	594:6,	595:6,	596:6,	597:6,	598:6,	599:6,	600:6,	601:6,	602:6,	603:6,	604:6,	605:6,	606:6,	607:6,	608:6,	609:6,	610:6,	611:6,	612:6,	613:6,	614:6,	615:6,	616:6,	617:6,	618:6,	619:6,	620:6,	621:6,	622:6,	623:6,	624:6,	625:6,	626:6.5,	627:6.5,	628:6.5,	629:6.5,	630:6.5,	631:6.5,	632:6.5,	633:6.5,	634:6.5,	635:6.5,	636:6.5,	637:6.5,	638:6.5,	639:6.5,	640:6.5,	641:6.5,	642:6.5,	643:6.5,	644:6.5,	645:6.5,	646:6.5,	647:6.5,	648:6.5,	649:6.5,	650:6.5,	651:6.5,	652:6.5,	653:6.5,	654:6.5,	655:6.5,	656:6.5,	657:6.5,	658:6.5,	659:6.5,	660:6.5,	661:6.5,	662:6.5,	663:6.5,	664:6.5,	665:6.5,	666:6.5,	667:6.5,	668:6.5,	669:6.5,	670:6.5,	671:6.5,	672:6.5,	673:6.5,	674:6.5,	675:6.5,	676:6.5,	677:6.5,	678:6.5,	679:6.5,	680:6.5,	681:6.5,	682:6.5,	683:6.5,	684:6.5,	685:6.5,	686:6.5,	687:6.5,	688:6.5,	689:6.5,	690:6.5,	691:6.5,	692:6.5,	693:6.5,	694:6.5,	695:6.5,	696:6.5,	697:6.5,	698:6.5,	699:6.5,	700:6.5,	701:6.5,	702:6.5,	703:6.5,	704:6.5,	705:6.5,	706:6.5,	707:6.5,	708:6.5,	709:6.5,	710:6.5,	711:6.5,	712:6.5,	713:6.5,	714:6.5,	715:6.5,	716:6.5,	717:6.5,	718:6.5,	719:6.5,	720:6.5,	721:6.5,	722:6.5,	723:6.5,	724:6.5,	725:6.5,	726:6.5,	727:6.5,	728:6.5,	729:6.5,	730:6.5,	731:6.5,	732:6.5,	733:6.5,	734:6.5,	735:6.5,	736:6.5,	737:6.5,	738:6.5,	739:6.5,	740:6.5,	741:6.5,	742:6.5,	743:6.5,	744:6.5,	745:6.5,	746:6.5,	747:6.5,	748:6.5,	749:6.5,	750:6.5,	751:6.5,	752:6.5,	753:6.5,	754:6.5,	755:6.5,	756:6.5,	757:6.5,	758:6.5,	759:6.5,	760:6.5,	761:6.5,	762:6.5,	763:6.5,	764:6.5,	765:6.5,	766:6.5,	767:6.5,	768:6.5,	769:6.5,	770:6.5,	771:6.5,	772:6.5,	773:6.5,	774:6.5,	775:6.5,	776:6.5,	777:6.5,	778:6.5,	779:6.5,	780:6.5,	781:6.5,	782:6.5,	783:6.5,	784:6.5,	785:6.5,	786:6.5,	787:6.5,	788:6.5,	789:6.5,	790:6.5,	791:6.5,	792:6.5,	793:6.5,	794:6.5,	795:6.5,	796:6.5,	797:6.5,	798:6.5,	799:6.5,	800:6.5,	801:6.5,	802:6.5,	803:6.5,	804:6.5,	805:6.5,	806:6.5,	807:6.5,	808:6.5,	809:6.5,	810:6.5,	811:6.5,	812:6.5,	813:6.5,	814:6.5,	815:6.5,	816:6.5,	817:6.5,	818:6.5,	819:6.5,	820:6.5,	821:6.5,	822:6.5,	823:6.5,	824:6.5,	825:6.5,	826:6.5,	827:6.5,	828:6.5,	829:6.5,	830:6.5,	831:6.5,	832:6.5,	833:6.5,	834:6.5,	835:6.5,	836:6.5,	837:6.5,	838:6.5,	839:6.5,	840:6.5,	841:6.5,	842:6.5,	843:6.5,	844:6.5,	845:6.5,	846:6.5,	847:6.5,	848:6.5,	849:6.5,	850:6.5,	851:6.5,	852:6.5,	853:6.5,	854:6.5,	855:6.5,	856:6.5,	857:6.5,	858:6.5,	859:6.5,	860:6.5,	861:6.5,	862:6.5,	863:6.5,	864:6.5,	865:6.5,	866:6.5,	867:6.5,	868:6.5,	869:6.5,	870:6.5,	871:6.5,	872:6.5,	873:6.5,	874:6.5,	875:6.5,	876:7,	877:7,	878:7,	879:7,	880:7,	881:7,	882:7,	883:7,	884:7,	885:7,	886:7,	887:7,	888:7,	889:7,	890:7,	891:7,	892:7,	893:7,	894:7,	895:7,	896:7,	897:7,	898:7,	899:7,	900:7,	901:7,	902:7,	903:7,	904:7,	905:7,	906:7,	907:7,	908:7,	909:7,	910:7,	911:7,	912:7,	913:7,	914:7,	915:7,	916:7,	917:7,	918:7,	919:7,	920:7,	921:7,	922:7,	923:7,	924:7,	925:7,	926:7,	927:7,	928:7,	929:7,	930:7,	931:7,	932:7,	933:7,	934:7,	935:7,	936:7,	937:7,	938:7,	939:7,	940:7,	941:7,	942:7,	943:7,	944:7,	945:7,	946:7,	947:7,	948:7,	949:7,	950:7,	951:7,	952:7,	953:7,	954:7,	955:7,	956:7,	957:7,	958:7,	959:7,	960:7,	961:7,	962:7,	963:7,	964:7,	965:7,	966:7,	967:7,	968:7,	969:7,	970:7,	971:7,	972:7,	973:7,	974:7,	975:7,	976:7,	977:7,	978:7,	979:7,	980:7,	981:7,	982:7,	983:7,	984:7,	985:7,	986:7,	987:7,	988:7,	989:7,	990:7,	991:7,	992:7,	993:7,	994:7,	995:7,	996:7,	997:7,	998:7,	999:7,	1000:7,	1001:7,	1002:7,	1003:7,	1004:7,	1005:7,	1006:7,	1007:7,	1008:7,	1009:7,	1010:7,	1011:7,	1012:7,	1013:7,	1014:7,	1015:7,	1016:7,	1017:7,	1018:7,	1019:7,	1020:7,	1021:7,	1022:7,	1023:7,	1024:7,	1025:7,	1026:7,	1027:7,	1028:7,	1029:7,	1030:7,	1031:7,	1032:7,	1033:7,	1034:7,	1035:7,	1036:7,	1037:7,	1038:7,	1039:7,	1040:7,	1041:7,	1042:7,	1043:7,	1044:7,	1045:7,	1046:7,	1047:7,	1048:7,	1049:7,	1050:7,	1051:7,	1052:7,	1053:7,	1054:7,	1055:7,	1056:7,	1057:7,	1058:7,	1059:7,	1060:7,	1061:7,	1062:7,	1063:7,	1064:7,	1065:7,	1066:7,	1067:7,	1068:7,	1069:7,	1070:7,	1071:7,	1072:7,	1073:7,	1074:7,	1075:7,	1076:7,	1077:7,	1078:7,	1079:7,	1080:7,	1081:7,	1082:7,	1083:7,	1084:7,	1085:7,	1086:7,	1087:7,	1088:7,	1089:7,	1090:7,	1091:7,	1092:7,	1093:7,	1094:7,	1095:7,	1096:7,	1097:7,	1098:7,	1099:7,	1100:7,	1101:7,	1102:7,	1103:7,	1104:7,	1105:7,	1106:7,	1107:7,	1108:7,	1109:7,	1110:7,	1111:7,	1112:7,	1113:7,	1114:7,	1115:7,	1116:7,	1117:7,	1118:7,	1119:7,	1120:7,	1121:7,	1122:7,	1123:7,	1124:7,	1125:7,	1126:7,	1127:7,	1128:7,	1129:7,	1130:7,	1131:7,	1132:7,	1133:7,	1134:7,	1135:7,	1136:7,	1137:7,	1138:7,	1139:7,	1140:7,	1141:7,	1142:7,	1143:7,	1144:7,	1145:7,	1146:7,	1147:7,	1148:7,	1149:7,	1150:7,	1151:7,	1152:7,	1153:7,	1154:7,	1155:7,	1156:7,	1157:7,	1158:7,	1159:7,	1160:7,	1161:7,	1162:7,	1163:7,	1164:7,	1165:7,	1166:7,	1167:7,	1168:7,	1169:7,	1170:7,	1171:7,	1172:7,	1173:7,	1174:7,	1175:7,
}
risk_tablo_9001={0:"Invalid Value",1.1:"Medium",	1.11:"Medium",	1.12:"Medium",	1.13:"Medium",	1.14:"Medium",	1.15:"Medium",	1.16:"Medium",	1.19:"Medium",	1.2:"Medium",	1.21:"Medium",	1.22:"Medium",	1.23:"Medium",	1.24:"Medium",	1.25:"Medium",	1.26:"Medium",	1.27:"Medium",	1.28:"Medium",	1.29:"Medium",	1.3:"Medium",	1.4:"Medium",	1.41:"Medium",	1.42:"Medium",	1.43:"Medium",	1.44:"Medium",	1.45:"Medium",	1.46:"Medium",	1.47:"Medium",	1.49:"Medium",	1.5:"Medium",	1.6:"Medium",	1.61:"Medium",	1.62:"Medium",	1.63:"Medium",	1.64:"Medium",	1.7:"Medium",	2:"Medium",	2.1:"Medium",	2.2:"Medium",	2.3:"Medium",	2.4:"Medium",	3:"High",	3.1:"High",	3.11:"High",	3.12:"High",	3.2:"High",	3.21:"High",	3.22:"High",	5:"Medium",	5.1:"Medium",	5.2:"Medium",	6:"High",	6.1:"High",	6.2:"High",	7.1:"Medium",	7.2:"Medium",	7.21:"Medium",	7.29:"Medium",	8.1:"Medium",	8.11:"Medium",	8.12:"Medium",	8.9:"Medium",	8.91:"Medium",	8.92:"Medium",	8.93:"Medium",	8.99:"Medium",	9.1:"High",	9.9:"Medium",	10.1:"High",	10.11:"High",	10.12:"High",	10.13:"High",	10.2:"High",	10.3:"High",	10.31:"High",	10.32:"High",	10.39:"High",	10.4:"High",	10.41:"High",	10.42:"High",	10.5:"High",	10.51:"High",	10.52:"High",	10.6:"High",	10.61:"High",	10.62:"High",	10.7:"High",	10.71:"High",	10.72:"High",	10.73:"High",	10.8:"High",	10.81:"High",	10.82:"High",	10.83:"High",	10.84:"High",	10.85:"High",	10.86:"High",	10.89:"High",	10.9:"High",	10.91:"Medium",	10.92:"Medium",	11:"High",	11.01:"High",	11.02:"High",	11.03:"High",	11.04:"High",	11.05:"High",	11.06:"High",	11.07:"High",	12:"High",	13:"Low",	13.1:"Low",	13.2:"Low",	13.3:"Low",	13.9:"Low",	13.91:"Low",	13.92:"Low",	13.93:"Low",	13.94:"Low",	13.95:"Low",	13.96:"Low",	13.99:"Low",	14:"Low",	14.1:"Low",	14.11:"Low",	14.12:"Low",	14.13:"Low",	14.14:"Low",	14.19:"Low",	14.2:"Low",	14.3:"Low",	14.31:"Low",	14.39:"Low",	15.1:"Low",	15.11:"Low",	15.12:"Low",	15.2:"Low",	16.1:"Medium",	16.2:"Low",	16.21:"Low",	16.22:"Low",	16.23:"Low",	16.24:"Low",	16.29:"Low",	17.1:"Low",	17.11:"Low",	17.12:"Low",	17.2:"Low",	17.21:"Low",	17.22:"Low",	17.23:"Low",	17.24:"Low",	17.29:"Low",	18.1:"Low",	18.11:"Low",	18.12:"Low",	18.13:"Low",	18.14:"Low",	18.2:"Low",	19.1:"Medium",	19.2:"Medium",	20.1:"High",	20.11:"High",	20.12:"Medium",	20.13:"High",	20.14:"High",	20.15:"Medium",	20.16:"Medium",	20.17:"Medium",	20.2:"High",	20.3:"Medium",	20.4:"Medium",	20.41:"High",	20.42:"High",	20.5:"High",	20.51:"High",	20.52:"Medium",	20.53:"Medium",	20.59:"High",	20.6:"High",	21.1:"High",	21.2:"High",	22.1:"Medium",	22.11:"Medium",	22.19:"Medium",	22.2:"Medium",	22.21:"Medium",	22.22:"Medium",	22.23:"Medium",	22.29:"Medium",	23.1:"Medium",	23.11:"Medium",	23.12:"Medium",	23.13:"Medium",	23.14:"Medium",	23.19:"Medium",	23.2:"Medium",	23.3:"Medium",	23.31:"Medium",	23.32:"Medium",	23.4:"Medium",	23.41:"Medium",	23.42:"Medium",	23.43:"Medium",	23.44:"Medium",	23.49:"Medium",	23.5:"Medium",	23.51:"Medium",	23.52:"Medium",	23.6:"Medium",	23.61:"High",	23.62:"Medium",	23.63:"Medium",	23.64:"Medium",	23.65:"Medium",	23.69:"Medium",	23.7:"Medium",	23.9:"Medium",	23.91:"Medium",	23.99:"Medium",	24:"Medium",	24.1:"Medium",	24.2:"Medium",	24.3:"Medium",	24.31:"Medium",	24.32:"Medium",	24.33:"Medium",	24.34:"Medium",	24.4:"Medium",	24.41:"Medium",	24.42:"Medium",	24.43:"Medium",	24.44:"Medium",	24.45:"Medium",	24.46:"High",	24.5:"Medium",	24.51:"Medium",	24.52:"Medium",	24.53:"Medium",	24.54:"Medium",	25:"Medium",	25.1:"Medium",	25.11:"Medium",	25.12:"Medium",	25.2:"Medium",	25.21:"Medium",	25.29:"Medium",	25.3:"Medium",	25.4:"High",	25.5:"Medium",	25.6:"Medium",	25.61:"Medium",	25.62:"Medium",	25.7:"Medium",	25.71:"Medium",	25.72:"Medium",	25.73:"Medium",	25.9:"Medium",	25.91:"Medium",	25.92:"Medium",	25.93:"Medium",	25.94:"Medium",	25.99:"Medium",	26.1:"High",	26.11:"High",	26.12:"High",	26.2:"Low",	26.3:"Low",	26.4:"Low",	26.5:"Medium",	26.51:"Medium",	26.52:"Medium",	26.6:"High",	26.7:"Medium",	26.8:"Low",	27:"Medium",	27.1:"Medium",	27.11:"Medium",	27.12:"Medium",	27.2:"Medium",	27.3:"Medium",	27.31:"Medium",	27.32:"Medium",	27.33:"Medium",	27.4:"Medium",	27.5:"Medium",	27.51:"Medium",	27.52:"Medium",	27.9:"Medium",	28:"Medium",	28.1:"Medium",	28.11:"Medium",	28.12:"Medium",	28.13:"Medium",	28.14:"Medium",	28.15:"Medium",	28.2:"Medium",	28.21:"Medium",	28.22:"Medium",	28.23:"Medium",	28.24:"Medium",	28.25:"Medium",	28.29:"Medium",	28.3:"Medium",	28.4:"Medium",	28.41:"Medium",	28.49:"Medium",	28.9:"Medium",	28.91:"Medium",	28.92:"Medium",	28.93:"Medium",	28.94:"Medium",	28.95:"Medium",	28.96:"Medium",	28.99:"Medium",	29:"Medium",	29.1:"Medium",	29.2:"Medium",	29.3:"Medium",	29.31:"Medium",	29.32:"Medium",	30.1:"High",	30.11:"High",	30.12:"High",	30.2:"High",	30.3:"High",	30.4:"High",	30.9:"High",	30.91:"High",	30.92:"High",	30.99:"High",	31:"High",	31.01:"High",	31.02:"High",	31.03:"High",	31.09:"High",	32:"High",	32.1:"High",	32.11:"High",	32.12:"High",	32.13:"High",	32.2:"High",	32.3:"High",	32.4:"High",	32.5:"High",	32.9:"High",	32.91:"High",	32.99:"High",	33.1:"High",	33.11:"High",	33.12:"High",	33.13:"High",	33.14:"High",	33.15:"High",	33.16:"High",	33.17:"High",	33.19:"Medium",	33.2:"Medium",	35.1:"High",	35.11:"Medium",	35.12:"High",	35.13:"Medium",	35.14:"Medium",	35.21:"Medium",	35.22:"Medium",	35.23:"Medium",	35.3:"Medium",	36:"Medium",	36:"Medium",	37:"Medium",	38:"Medium",	38.1:"Medium",	38.11:"Medium",	38.12:"Medium",	38.2:"Medium",	38.21:"Medium",	38.22:"Medium",	38.3:"Medium",	38.31:"Medium",	38.32:"Medium",	39:"Medium",	41:"High",	41.1:"High",	41.2:"Medium",	42:"High",	42.1:"High",	42.11:"High",	42.12:"High",	42.13:"High",	42.2:"High",	42.21:"High",	42.22:"High",	42.9:"High",	42.91:"High",	42.99:"High",	43:"High",	43.1:"High",	43.11:"High",	43.12:"High",	43.13:"High",	43.2:"High",	43.21:"High",	43.22:"High",	43.29:"High",	43.3:"High",	43.31:"High",	43.32:"Low",	43.33:"Low",	43.34:"Low",	43.39:"Medium",	43.9:"Medium",	43.91:"Medium",	43.99:"High",	45:"Low",	45.1:"Low",	45.11:"Low",	45.19:"Low",	45.2:"High",	45.3:"Medium",	45.31:"Medium",	45.32:"Medium",	45.4:"High",	46:"Low",	46.1:"Low",	46.11:"Low",	46.12:"Low",	46.13:"Low",	46.14:"Low",	46.15:"Low",	46.16:"Low",	46.17:"Low",	46.18:"Low",	46.19:"Low",	46.2:"Low",	46.21:"Low",	46.22:"Low",	46.23:"Low",	46.24:"Low",	46.3:"Medium",	46.31:"Medium",	46.32:"Medium",	46.33:"Medium",	46.34:"Medium",	46.35:"Low",	46.36:"Low",	46.37:"Low",	46.38:"Medium",	46.39:"Low",	46.4:"Low",	46.41:"Low",	46.42:"Low",	46.43:"Low",	46.44:"Low",	46.45:"Low",	46.46:"Medium",	46.47:"Low",	46.48:"Low",	46.49:"Low",	46.5:"Low",	46.51:"Low",	46.52:"Low",	46.6:"Low",	46.61:"Low",	46.62:"Low",	46.63:"Low",	46.64:"Low",	46.65:"Low",	46.66:"Low",	46.69:"Low",	46.7:"Low",	46.71:"Medium",	46.72:"Low",	46.73:"Low",	46.74:"Low",	46.75:"Low",	46.76:"Low",	46.77:"Low",	46.9:"Low",	47:"Low",	47.1:"Low",	47.11:"Low",	47.19:"Low",	47.2:"Medium",	47.21:"Medium",	47.22:"Medium",	47.23:"Medium",	47.24:"Medium",	47.25:"Medium",	47.26:"Low",	47.29:"Low",	47.3:"Medium",	47.4:"Low",	47.41:"Low",	47.42:"Low",	47.43:"Low",	47.5:"Low",	47.51:"Low",	47.52:"Low",	47.53:"Low",	47.54:"Low",	47.59:"Low",	47.6:"Low",	47.61:"Low",	47.62:"Low",	47.63:"Low",	47.64:"Low",	47.65:"Medium",	47.7:"Low",	47.71:"Low",	47.72:"Low",	47.73:"Low",	47.74:"Low",	47.75:"Low",	47.76:"Low",	47.77:"Low",	47.78:"Low",	47.79:"Low",	47.8:"Low",	47.81:"Low",	47.82:"Low",	47.89:"Low",	47.9:"Low",	47.91:"Low",	47.99:"Low",	49.1:"High",	49.2:"Medium",	49.3:"Medium",	49.31:"Medium",	49.32:"Medium",	49.39:"Medium",	49.4:"Medium",	49.41:"Medium",	49.42:"Medium",	49.5:"Medium",	49.5:"Medium",	50:"Medium",	50.1:"Medium",	50.2:"Medium",	50.3:"Medium",	50.4:"Medium",	51:"High",	51.1:"High",	51.2:"Medium",	51.21:"Medium",	51.22:"High",	52:"Medium",	52.1:"Medium",	52.2:"Medium",	52.21:"High",	52.22:"High",	52.23:"High",	52.24:"Medium",	52.29:"Medium",	53:"Medium",	53.1:"Medium",	53.2:"Medium",	53.2:"Medium",	55:"Low",	55.1:"Low",	55.2:"Low",	55.3:"Low",	55.9:"Low",	56:"Low",	56.1:"Low",	56.2:"Low",	56.21:"Low",	56.29:"Low",	56.3:"Low",	58:"Low",	58.1:"Low",	58.11:"Low",	58.12:"Low",	58.13:"Low",	58.14:"Low",	58.19:"Low",	58.2:"Low",	58.21:"Low",	58.29:"Low",	59.1:"Low",	59.11:"Low",	59.12:"Low",	59.13:"Low",	59.14:"Low",	59.2:"Low",	60:"Low",	60.1:"Low",	60.2:"Low",	61:"Low",	61.1:"Low",	61.2:"Low",	61.3:"Low",	61.9:"Low",	62:"Low",	62.01:"Low",	62.02:"Low",	62.03:"Low",	62.09:"Low",	63:"Low",	63.1:"Low",	63.11:"Low",	63.12:"Low",	63.9:"Low",	63.91:"Low",	63.99:"Low",	64:"Medium",	64.1:"Medium",	64.11:"Medium",	64.19:"Medium",	64.2:"Medium",	64.3:"Medium",	64.9:"Medium",	64.91:"Medium",	64.92:"Medium",	64.99:"Medium",	65:"Medium",	65.1:"Medium",	65.11:"Medium",	65.12:"Medium",	65.2:"Medium",	65.3:"Medium",	66:"Medium",	66.1:"Medium",	66.11:"Medium",	66.12:"Medium",	66.19:"Medium",	66.2:"Medium",	66.21:"Medium",	66.22:"Medium",	66.29:"Medium",	66.3:"Medium",	68:"Low",	68.1:"Low",	68.2:"Low",	68.3:"Low",	68.31:"Low",	68.32:"Low",	69:"Medium",	69.1:"Medium",	69.2:"Medium",	70:"Medium",	70.1:"Medium",	70.2:"Medium",	70.21:"Medium",	70.22:"High",	71:"High",	71.1:"High",	71.11:"High",	71.12:"High",	71.2:"High",	72:"High",	72.1:"High",	72.11:"High",	72.19:"High",	72.2:"Medium",	72.2:"Medium",	73:"Low",	73.1:"Low",	73.11:"Low",	73.12:"Low",	73.2:"Medium",	74:"High",	74.1:"High",	74.2:"Low",	74.3:"Medium",	74.9:"High",	75:"Low",	77:"Medium",	77.1:"Medium",	77.11:"Medium",	77.12:"Medium",	77.2:"Medium",	77.21:"Medium",	77.22:"Medium",	77.29:"Medium",	77.3:"Medium",	77.31:"Medium",	77.32:"Medium",	77.33:"Medium",	77.34:"Medium",	77.35:"Medium",	77.39:"Medium",	77.4:"Medium",	78:"Medium",	78.1:"Medium",	78.2:"Medium",	78.3:"Medium",	79:"Low",	79.1:"Low",	79.11:"Low",	79.12:"Low",	79.9:"Low",	80:"Medium",	80.1:"Medium",	80.2:"Medium",	80.3:"Medium",	81:"Medium",	81.1:"Medium",	81.2:"Medium",	81.21:"Medium",	81.22:"Medium",	81.29:"Medium",	81.3:"Medium",	82:"Medium",	82.1:"Medium",	82.11:"Medium",	82.19:"Medium",	82.2:"Medium",	82.3:"Medium",	82.9:"Medium",	82.91:"Medium",	82.92:"Medium",	82.99:"Medium",	84:"Medium",	84.1:"Medium",	84.11:"Medium",	84.12:"Medium",	84.13:"Medium",	84.2:"Medium",	84.21:"Medium",	84.22:"High",	84.23:"High",	84.24:"High",	84.25:"High",	84.3:"High",	85:"Low",	85.1:"Low",	85.2:"Low",	85.3:"Low",	85.31:"Low",	85.32:"Low",	85.4:"Low",	85.41:"Low",	85.42:"Low",	85.5:"Low",	85.51:"Low",	85.52:"Low",	85.53:"Low",	85.59:"Low",	85.6:"Low",	86:"High",	86.1:"High",	86.2:"High",	86.21:"High",	86.22:"High",	86.23:"High",	86.9:"Medium",	87:"Low",	87.1:"Low",	87.2:"Low",	87.3:"Low",	87.9:"Low",	88:"Medium",	88.1:"Medium",	88.9:"Medium",	88.91:"Low",	88.99:"Medium",	90:"Low",	90.01:"Low",	90.02:"Low",	90.03:"Low",	90.04:"Low",	91:"Low",	91.01:"Low",	91.02:"Low",	91.03:"Low",	91.04:"Low",	92:"Low",	92:"Low",	93:"Low",	93.1:"Low",	93.11:"Low",	93.12:"Low",	93.13:"Low",	93.19:"Low",	93.2:"Low",	93.21:"Low",	93.29:"Low",	94:"Low",	94.1:"Low",	94.11:"Low",	94.12:"Low",	94.2:"Low",	94.9:"Low",	94.91:"Low",	94.92:"Low",	94.99:"Medium",	95.1:"Medium",	95.11:"Medium",	95.12:"Medium",	95.2:"Low",	95.21:"Low",	95.22:"Low",	95.23:"Low",	95.24:"Low",	95.25:"Low",	95.29:"Low",	96:"Low",	96.01:"Low",	96.02:"Low",	96.03:"Low",	96.04:"Low",	96.09:"Low",
}
risk_tablo_14001={0:"Invalid Value",1.1:"Medium",	1.11:"Medium",	1.12:"Medium",	1.13:"Medium",	1.14:"Medium",	1.15:"Medium",	1.16:"Medium",	1.19:"Medium",	1.2:"Medium",	1.21:"Medium",	1.22:"Medium",	1.23:"Medium",	1.24:"Medium",	1.25:"Medium",	1.26:"Medium",	1.27:"Medium",	1.28:"Medium",	1.29:"Medium",	1.3:"Medium",	1.4:"Medium",	1.41:"Medium",	1.42:"Medium",	1.43:"Medium",	1.44:"Medium",	1.45:"Medium",	1.46:"Medium",	1.47:"Medium",	1.49:"Medium",	1.5:"Medium",	1.6:"Medium",	1.61:"Medium",	1.62:"Medium",	1.63:"Medium",	1.64:"Medium",	1.7:"Medium",	2:"Medium",	2.1:"Medium",	2.2:"Medium",	2.3:"Medium",	2.4:"Medium",	3:"Medium",	3.1:"Medium",	3.11:"Medium",	3.12:"Medium",	3.2:"Medium",	3.21:"Medium",	3.22:"Medium",	5:"High",	5.1:"High",	5.2:"High",	6:"High",	6.1:"High",	6.2:"High",	7.1:"High",	7.2:"High",	7.21:"High",	7.29:"High",	8.1:"High",	8.11:"High",	8.12:"High",	8.9:"High",	8.91:"High",	8.92:"High",	8.93:"High",	8.99:"High",	9.1:"High",	9.9:"High",	10.1:"Medium",	10.11:"Medium",	10.12:"Medium",	10.13:"Medium",	10.2:"Medium",	10.3:"Medium",	10.31:"Medium",	10.32:"Medium",	10.39:"Medium",	10.4:"Medium",	10.41:"Medium",	10.42:"Medium",	10.5:"Medium",	10.51:"Medium",	10.52:"Medium",	10.6:"Medium",	10.61:"Medium",	10.62:"Medium",	10.7:"Medium",	10.71:"Medium",	10.72:"Medium",	10.73:"Medium",	10.8:"Medium",	10.81:"Medium",	10.82:"Medium",	10.83:"Medium",	10.84:"Medium",	10.85:"Medium",	10.86:"Medium",	10.89:"Medium",	10.9:"Medium",	10.91:"Medium",	10.92:"Medium",	11:"Medium",	11.01:"Medium",	11.02:"Medium",	11.03:"Medium",	11.04:"Medium",	11.05:"Medium",	11.06:"Medium",	11.07:"Medium",	12:"Medium",	13:"Medium",	13.1:"Medium",	13.2:"Medium",	13.3:"Medium",	13.9:"Medium",	13.91:"Medium",	13.92:"Medium",	13.93:"Medium",	13.94:"Medium",	13.95:"Medium",	13.96:"Medium",	13.99:"Medium",	14:"Medium",	14.1:"Medium",	14.11:"Medium",	14.12:"Medium",	14.13:"Medium",	14.14:"Medium",	14.19:"Medium",	14.2:"Medium",	14.3:"Medium",	14.31:"Medium",	14.39:"Medium",	15.1:"Medium",	15.11:"High",	15.12:"Medium",	15.2:"Medium",	16.1:"Medium",	16.2:"Low",	16.21:"Medium",	16.22:"Low",	16.23:"Low",	16.24:"Low",	16.29:"Low",	17.1:"High",	17.11:"High",	17.12:"Medium",	17.2:"Low",	17.21:"Low",	17.22:"Low",	17.23:"Low",	17.24:"Low",	17.29:"Low",	18.1:"Medium",	18.11:"Medium",	18.12:"Medium",	18.13:"Medium",	18.14:"Limited",	18.2:"Limited",	19.1:"High",	19.2:"High",	20.1:"High",	20.11:"High",	20.12:"High",	20.13:"High",	20.14:"High",	20.15:"High",	20.16:"High",	20.17:"High",	20.2:"High",	20.3:"High",	20.4:"High",	20.41:"High",	20.42:"High",	20.5:"High",	20.51:"High",	20.52:"High",	20.53:"High",	20.59:"High",	20.6:"High",	21.1:"High",	21.2:"High",	22.1:"Low",	22.11:"Low",	22.19:"Low",	22.2:"Low",	22.21:"Low",	22.22:"Low",	22.23:"Low",	22.29:"Low",	23.1:"Medium",	23.11:"Medium",	23.12:"Medium",	23.13:"Medium",	23.14:"Medium",	23.19:"Medium",	23.2:"High",	23.3:"High",	23.31:"High",	23.32:"High",	23.4:"High",	23.41:"High",	23.42:"High",	23.43:"High",	23.44:"High",	23.49:"High",	23.5:"High",	23.51:"High",	23.52:"Medium",	23.6:"High",	23.61:"High",	23.62:"Medium",	23.63:"High",	23.64:"High",	23.65:"High",	23.69:"High",	23.7:"Medium",	23.9:"Medium",	23.91:"Medium",	23.99:"Medium",	24:"High",	24.1:"High",	24.2:"High",	24.3:"High",	24.31:"Low",	24.32:"Low",	24.33:"Low",	24.34:"Low",	24.4:"High",	24.41:"High",	24.42:"High",	24.43:"High",	24.44:"High",	24.45:"High",	24.46:"High",	24.5:"High",	24.51:"High",	24.52:"High",	24.53:"High",	24.54:"High",	25:"High",	25.1:"High",	25.11:"High",	25.12:"Low",	25.2:"Low",	25.21:"Low",	25.29:"Low",	25.3:"Low",	25.4:"Low",	25.5:"Low",	25.6:"Medium",	25.61:"Medium",	25.62:"High",	25.7:"Low",	25.71:"Low",	25.72:"Low",	25.73:"Low",	25.9:"Low",	25.91:"Low",	25.92:"Low",	25.93:"Low",	25.94:"Low",	25.99:"Low",	26.1:"Low",	26.11:"Medium",	26.12:"Low",	26.2:"Low",	26.3:"Low",	26.4:"Low",	26.5:"Low",	26.51:"Low",	26.52:"Low",	26.6:"Low",	26.7:"Low",	26.8:"High",	27:"Low",	27.1:"Low",	27.11:"Low",	27.12:"Low",	27.2:"Low",	27.3:"Low",	27.31:"Low",	27.32:"Low",	27.33:"Low",	27.4:"Low",	27.5:"Low",	27.51:"Low",	27.52:"Low",	27.9:"Low",	28:"Low",	28.1:"Low",	28.11:"Low",	28.12:"Low",	28.13:"Low",	28.14:"Low",	28.15:"Low",	28.2:"Low",	28.21:"Low",	28.22:"Low",	28.23:"Low",	28.24:"Low",	28.25:"Low",	28.29:"Low",	28.3:"Low",	28.4:"Low",	28.41:"Low",	28.49:"Low",	28.9:"Low",	28.91:"Low",	28.92:"Low",	28.93:"Low",	28.94:"Low",	28.95:"Low",	28.96:"Low",	28.99:"Low",	29:"Low",	29.1:"Low",	29.2:"Low",	29.3:"Low",	29.31:"Low",	29.32:"Low",	30.1:"Medium",	30.11:"Medium",	30.12:"Medium",	30.2:"Medium",	30.3:"Medium",	30.4:"Medium",	30.9:"Medium",	30.91:"Medium",	30.92:"Medium",	30.99:"Medium",	31:"Medium",	31.01:"Medium",	31.02:"Medium",	31.03:"Medium",	31.09:"Medium",	32:"Medium",	32.1:"Medium",	32.11:"Medium",	32.12:"Medium",	32.13:"Medium",	32.2:"Medium",	32.3:"Medium",	32.4:"Medium",	32.5:"Medium",	32.9:"Medium",	32.91:"Medium",	32.99:"Medium",	33.1:"Medium",	33.11:"Medium",	33.12:"Medium",	33.13:"Medium",	33.14:"Medium",	33.15:"Medium",	33.16:"Medium",	33.17:"Medium",	33.19:"Medium",	33.2:"Low",	35.1:"High",	35.11:"High",	35.12:"Medium",	35.13:"Medium",	35.14:"Medium",	35.21:"Medium",	35.22:"Medium",	35.23:"Medium",	35.3:"Medium",	36:"Medium",	36:"Medium",	37:"High",	38:"High",	38.1:"High",	38.11:"High",	38.12:"High",	38.2:"High",	38.21:"High",	38.22:"High",	38.3:"Medium",	38.31:"Medium",	38.32:"Medium",	39:"High",	41:"High",	41.1:"High",	41.2:"High",	42:"High",	42.1:"High",	42.11:"High",	42.12:"High",	42.13:"High",	42.2:"High",	42.21:"High",	42.22:"High",	42.9:"High",	42.91:"High",	42.99:"High",	43:"High",	43.1:"High",	43.11:"High",	43.12:"High",	43.13:"High",	43.2:"Medium",	43.21:"Medium",	43.22:"Medium",	43.29:"Medium",	43.3:"Medium",	43.31:"Medium",	43.32:"Medium",	43.33:"Medium",	43.34:"Medium",	43.39:"Medium",	43.9:"Medium",	43.91:"High",	43.99:"High",	45:"Low",	45.1:"Low",	45.11:"Low",	45.19:"Low",	45.2:"Low",	45.3:"Low",	45.31:"Low",	45.32:"Low",	45.4:"Low",	46:"Low",	46.1:"Low",	46.11:"Low",	46.12:"Low",	46.13:"Low",	46.14:"Low",	46.15:"Low",	46.16:"Low",	46.17:"Low",	46.18:"Low",	46.19:"Low",	46.2:"Low",	46.21:"Low",	46.22:"Low",	46.23:"Low",	46.24:"Low",	46.3:"Low",	46.31:"Low",	46.32:"Low",	46.33:"Low",	46.34:"Low",	46.35:"Low",	46.36:"Low",	46.37:"Low",	46.38:"Low",	46.39:"Low",	46.4:"Low",	46.41:"Low",	46.42:"Low",	46.43:"Low",	46.44:"Low",	46.45:"Low",	46.46:"Low",	46.47:"Low",	46.48:"Low",	46.49:"Low",	46.5:"Low",	46.51:"Low",	46.52:"Low",	46.6:"Low",	46.61:"Low",	46.62:"Low",	46.63:"Low",	46.64:"Low",	46.65:"Low",	46.66:"Low",	46.69:"Low",	46.7:"Low",	46.71:"Medium",	46.72:"Low",	46.73:"Low",	46.74:"Low",	46.75:"Low",	46.76:"Low",	46.77:"Low",	46.9:"Low",	47:"Low",	47.1:"Low",	47.11:"Low",	47.19:"Low",	47.2:"Low",	47.21:"Low",	47.22:"Low",	47.23:"Low",	47.24:"Low",	47.25:"Low",	47.26:"Low",	47.29:"Low",	47.3:"Low",	47.4:"Low",	47.41:"Low",	47.42:"Low",	47.43:"Low",	47.5:"Low",	47.51:"Low",	47.52:"Low",	47.53:"Low",	47.54:"Low",	47.59:"Low",	47.6:"Low",	47.61:"Low",	47.62:"Low",	47.63:"Low",	47.64:"Low",	47.65:"Low",	47.7:"Low",	47.71:"Low",	47.72:"Low",	47.73:"Low",	47.74:"Low",	47.75:"Low",	47.76:"Low",	47.77:"Low",	47.78:"Low",	47.79:"Low",	47.8:"Low",	47.81:"Low",	47.82:"Low",	47.89:"Low",	47.9:"Low",	47.91:"Low",	47.99:"Low",	49.1:"Medium",	49.2:"Medium",	49.3:"Medium",	49.31:"Medium",	49.32:"Medium",	49.39:"Medium",	49.4:"Medium",	49.41:"Medium",	49.42:"Medium",	49.5:"Medium",	49.5:"Medium",	50:"Medium",	50.1:"Medium",	50.2:"Medium",	50.3:"Medium",	50.4:"Medium",	51:"Medium",	51.1:"Medium",	51.2:"Medium",	51.21:"Medium",	51.22:"Medium",	52:"Medium",	52.1:"Low",	52.2:"Low",	52.21:"Medium",	52.22:"Medium",	52.23:"Medium",	52.24:"Low",	52.29:"Limited",	53:"Low",	53.1:"Low",	53.2:"Low",	53.2:"Low",	55:"Low",	55.1:"Low",	55.2:"Low",	55.3:"Low",	55.9:"Low",	56:"Low",	56.1:"Low",	56.2:"Low",	56.21:"Low",	56.29:"Low",	56.3:"Low",	58:"Limited",	58.1:"Limited",	58.11:"Limited",	58.12:"Limited",	58.13:"Limited",	58.14:"Limited",	58.19:"Medium",	58.2:"Low",	58.21:"Low",	58.29:"Low",	59.1:"Low",	59.11:"Low",	59.12:"Low",	59.13:"Low",	59.14:"Low",	59.2:"Limited",	60:"Low",	60.1:"Low",	60.2:"Low",	61:"Limited",	61.1:"Limited",	61.2:"Limited",	61.3:"Limited",	61.9:"Limited",	62:"Low",	62.01:"Low",	62.02:"Low",	62.03:"Low",	62.09:"Low",	63:"Low",	63.1:"Low",	63.11:"Low",	63.12:"Low",	63.9:"Low",	63.91:"Low",	63.99:"Low",	64:"Low",	64.1:"Low",	64.11:"Low",	64.19:"Low",	64.2:"Limited",	64.3:"Low",	64.9:"Low",	64.91:"Low",	64.92:"Low",	64.99:"Low",	65:"Low",	65.1:"Low",	65.11:"Low",	65.12:"Low",	65.2:"Low",	65.3:"Low",	66:"Low",	66.1:"Low",	66.11:"Low",	66.12:"Low",	66.19:"Low",	66.2:"Low",	66.21:"Low",	66.22:"Low",	66.29:"Low",	66.3:"Low",	68:"Medium",	68.1:"Medium",	68.2:"Medium",	68.3:"Medium",	68.31:"Medium",	68.32:"Medium",	69:"low",	69.1:"low",	69.2:"low",	70:"Low",	70.1:"Low",	70.2:"Low",	70.21:"Low",	70.22:"Medium",	71:"High",	71.1:"High",	71.11:"High",	71.12:"High",	71.2:"Medium",	72:"High",	72.1:"High",	72.11:"High",	72.19:"High",	72.2:"Low",	72.2:"Low",	73:"Low",	73.1:"Low",	73.11:"Low",	73.12:"Low",	73.2:"Low",	74:"High",	74.1:"High",	74.2:"Low",	74.3:"Low",	74.9:"High",	75:"Medium",	77:"Low",	77.1:"Low",	77.11:"Low",	77.12:"Low",	77.2:"Low",	77.21:"Low",	77.22:"Low",	77.29:"Low",	77.3:"Medium",	77.31:"Medium",	77.32:"Medium",	77.33:"Medium",	77.34:"Medium",	77.35:"Medium",	77.39:"Low",	77.4:"Low",	78:"Low",	78.1:"Low",	78.2:"Low",	78.3:"Low",	79:"Low",	79.1:"Low",	79.11:"Low",	79.12:"Low",	79.9:"Low",	80:"Low",	80.1:"Low",	80.2:"Low",	80.3:"Low",	81:"Low",	81.1:"Low",	81.2:"Medium",	81.21:"Medium",	81.22:"Medium",	81.29:"Medium",	81.3:"Medium",	82:"Limited",	82.1:"Limited",	82.11:"Limited",	82.19:"Limited",	82.2:"Low",	82.3:"Low",	82.9:"Low",	82.91:"Low",	82.92:"Low",	82.99:"Low",	84:"Special",	84.1:"Special",	84.11:"Special",	84.12:"Special",	84.13:"Special",	84.2:"Special",	84.21:"Special",	84.22:"Special",	84.23:"Special",	84.24:"Special",	84.25:"Special",	84.3:"Special",	85:"Limited",	85.1:"Limited",	85.2:"Limited",	85.3:"Limited",	85.31:"Limited",	85.32:"Limited",	85.4:"Limited",	85.41:"Limited",	85.42:"Limited",	85.5:"Limited",	85.51:"Limited",	85.52:"Limited",	85.53:"Limited",	85.59:"Limited",	85.6:"Limited",	86:"Medium",	86.1:"Medium",	86.2:"Medium",	86.21:"Medium",	86.22:"Medium",	86.23:"Medium",	86.9:"Medium",	87:"Low",	87.1:"Low",	87.2:"Low",	87.3:"Low",	87.9:"Low",	88:"Medium",	88.1:"Medium",	88.9:"Medium",	88.91:"Low",	88.99:"Low",	90:"Low",	90.01:"Low",	90.02:"Low",	90.03:"Low",	90.04:"Low",	91:"Low",	91.01:"Low",	91.02:"Low",	91.03:"Low",	91.04:"Low",	92:"Low",	92:"Low",	93:"Low",	93.1:"Low",	93.11:"Low",	93.12:"Low",	93.13:"Low",	93.19:"Low",	93.2:"Low",	93.21:"Low",	93.29:"Low",	94:"Low",	94.1:"Low",	94.11:"Low",	94.12:"Low",	94.2:"Low",	94.9:"Low",	94.91:"Low",	94.92:"Low",	94.99:"Medium",	95.1:"Low",	95.11:"Low",	95.12:"Low",	95.2:"Low",	95.21:"Low",	95.22:"Low",	95.23:"Low",	95.24:"Low",	95.25:"Low",	95.29:"Low",	96:"Medium",	96.01:"Medium",	96.02:"Medium",	96.03:"Medium",	96.04:"Medium",	96.09:"Medium",
}
risk_tablo_45001={0:"Invalid Value",1.1:"Medium",	1.11:"Medium",	1.12:"Medium",	1.13:"Medium",	1.14:"Medium",	1.15:"Medium",	1.16:"Medium",	1.19:"Medium",	1.2:"Medium",	1.21:"Medium",	1.22:"Medium",	1.23:"Medium",	1.24:"Medium",	1.25:"Medium",	1.26:"Medium",	1.27:"Medium",	1.28:"Medium",	1.29:"Medium",	1.3:"Medium",	1.4:"Medium",	1.41:"Medium",	1.42:"Medium",	1.43:"Medium",	1.44:"Medium",	1.45:"Medium",	1.46:"Medium",	1.47:"Medium",	1.49:"Medium",	1.5:"Medium",	1.6:"Medium",	1.61:"Medium",	1.62:"Medium",	1.63:"Medium",	1.64:"Medium",	1.7:"Medium",	2:"Medium",	2.1:"Medium",	2.2:"Medium",	2.3:"Medium",	2.4:"Medium",	3:"Medium",	3.1:"High",	3.11:"High",	3.12:"Medium",	3.2:"Medium",	3.21:"Medium",	3.22:"Medium",	5:"High",	5.1:"High",	5.2:"High",	6:"High",	6.1:"High",	6.2:"High",	7.1:"High",	7.2:"High",	7.21:"High",	7.29:"High",	8.1:"High",	8.11:"High",	8.12:"High",	8.9:"High",	8.91:"High",	8.92:"High",	8.93:"High",	8.99:"High",	9.1:"High",	9.9:"High",	10.1:"High",	10.11:"High",	10.12:"High",	10.13:"High",	10.2:"Medium",	10.3:"Medium",	10.31:"Medium",	10.32:"Medium",	10.39:"Medium",	10.4:"Medium",	10.41:"Medium",	10.42:"Medium",	10.5:"Medium",	10.51:"Medium",	10.52:"Medium",	10.6:"Medium",	10.61:"Medium",	10.62:"Medium",	10.7:"Medium",	10.71:"Medium",	10.72:"Medium",	10.73:"Medium",	10.8:"Medium",	10.81:"Medium",	10.82:"Medium",	10.83:"Medium",	10.84:"Medium",	10.85:"Medium",	10.86:"Medium",	10.89:"Medium",	10.9:"Medium",	10.91:"Medium",	10.92:"Medium",	11:"Medium",	11.01:"Medium",	11.02:"Medium",	11.03:"Medium",	11.04:"Medium",	11.05:"Medium",	11.06:"Medium",	11.07:"Medium",	12:"Medium",	13:"Medium",	13.1:"Medium",	13.2:"Medium",	13.3:"Medium",	13.9:"Medium",	13.91:"Medium",	13.92:"Medium",	13.93:"Medium",	13.94:"Medium",	13.95:"Medium",	13.96:"Medium",	13.99:"Medium",	14:"Medium",	14.1:"Medium",	14.11:"Medium",	14.12:"Medium",	14.13:"Medium",	14.14:"Medium",	14.19:"Medium",	14.2:"Medium",	14.3:"Medium",	14.31:"Medium",	14.39:"Medium",	15.1:"Medium",	15.11:"High",	15.12:"Medium",	15.2:"Medium",	16.1:"Medium",	16.2:"Medium",	16.21:"Medium",	16.22:"Medium",	16.23:"Medium",	16.24:"Medium",	16.29:"Medium",	17.1:"High",	17.11:"High",	17.12:"Medium",	17.2:"Low",	17.21:"Low",	17.22:"Low",	17.23:"Low",	17.24:"Low",	17.29:"Low",	18.1:"Medium",	18.11:"Medium",	18.12:"Medium",	18.13:"Medium",	18.14:"Limited",	18.2:"Limited",	19.1:"High",	19.2:"High",	20.1:"High",	20.11:"High",	20.12:"High",	20.13:"High",	20.14:"High",	20.15:"High",	20.16:"High",	20.17:"High",	20.2:"High",	20.3:"High",	20.4:"High",	20.41:"High",	20.42:"High",	20.5:"High",	20.51:"High",	20.52:"High",	20.53:"High",	20.59:"High",	20.6:"High",	21.1:"High",	21.2:"High",	22.1:"Medium",	22.11:"Medium",	22.19:"Medium",	22.2:"Medium",	22.21:"Medium",	22.22:"Medium",	22.23:"Medium",	22.29:"Medium",	23.1:"Medium",	23.11:"Medium",	23.12:"Medium",	23.13:"Medium",	23.14:"High",	23.19:"Medium",	23.2:"High",	23.3:"High",	23.31:"High",	23.32:"Medium",	23.4:"High",	23.41:"High",	23.42:"High",	23.43:"High",	23.44:"High",	23.49:"High",	23.5:"High",	23.51:"High",	23.52:"Medium",	23.6:"High",	23.61:"High",	23.62:"Medium",	23.63:"High",	23.64:"High",	23.65:"High",	23.69:"High",	23.7:"Medium",	23.9:"Medium",	23.91:"Medium",	23.99:"Medium",	24:"High",	24.1:"High",	24.2:"High",	24.3:"High",	24.31:"High",	24.32:"High",	24.33:"High",	24.34:"High",	24.4:"High",	24.41:"High",	24.42:"High",	24.43:"High",	24.44:"High",	24.45:"High",	24.46:"High",	24.5:"High",	24.51:"High",	24.52:"High",	24.53:"High",	24.54:"High",	25:"High",	25.1:"High",	25.11:"High",	25.12:"Medium",	25.2:"Medium",	25.21:"Medium",	25.29:"Medium",	25.3:"Medium",	25.4:"High",	25.5:"Medium",	25.6:"Medium",	25.61:"Medium",	25.62:"High",	25.7:"Medium",	25.71:"Medium",	25.72:"Medium",	25.73:"Medium",	25.9:"Medium",	25.91:"Medium",	25.92:"Medium",	25.93:"Medium",	25.94:"Medium",	25.99:"Medium",	26.1:"Low",	26.11:"Low",	26.12:"Medium",	26.2:"Medium",	26.3:"Medium",	26.4:"Medium",	26.5:"Medium",	26.51:"Medium",	26.52:"Medium",	26.6:"Medium",	26.7:"Medium",	26.8:"Medium",	27:"Medium",	27.1:"Medium",	27.11:"Medium",	27.12:"Medium",	27.2:"High",	27.3:"Medium",	27.31:"Medium",	27.32:"Medium",	27.33:"Medium",	27.4:"Medium",	27.5:"Medium",	27.51:"Medium",	27.52:"Medium",	27.9:"Medium",	28:"Medium",	28.1:"Medium",	28.11:"Medium",	28.12:"Medium",	28.13:"Medium",	28.14:"Medium",	28.15:"Medium",	28.2:"Medium",	28.21:"Medium",	28.22:"Medium",	28.23:"Medium",	28.24:"Medium",	28.25:"Medium",	28.29:"Medium",	28.3:"Medium",	28.4:"Medium",	28.41:"Medium",	28.49:"Medium",	28.9:"Medium",	28.91:"Medium",	28.92:"Medium",	28.93:"Medium",	28.94:"Medium",	28.95:"Medium",	28.96:"Medium",	28.99:"Medium",	29:"High",	29.1:"High",	29.2:"High",	29.3:"High",	29.31:"High",	29.32:"High",	30.1:"High",	30.11:"High",	30.12:"Medium",	30.2:"High",	30.3:"High",	30.4:"High",	30.9:"High",	30.91:"High",	30.92:"High",	30.99:"High",	31:"High",	31.01:"High",	31.02:"High",	31.03:"High",	31.09:"High",	32:"High",	32.1:"High",	32.11:"High",	32.12:"High",	32.13:"High",	32.2:"High",	32.3:"High",	32.4:"High",	32.5:"High",	32.9:"High",	32.91:"High",	32.99:"High",	33.1:"High",	33.11:"High",	33.12:"High",	33.13:"High",	33.14:"High",	33.15:"High",	33.16:"Medium",	33.17:"High",	33.19:"Medium",	33.2:"Low",	35.1:"High",	35.11:"High",	35.12:"High",	35.13:"High",	35.14:"Medium",	35.21:"High",	35.22:"Medium",	35.23:"Medium",	35.3:"Medium",	36:"Medium",	36:"Medium",	37:"High",	38:"High",	38.1:"High",	38.11:"High",	38.12:"High",	38.2:"High",	38.21:"High",	38.22:"High",	38.3:"Medium",	38.31:"Medium",	38.32:"High",	39:"High",	41:"High",	41.1:"High",	41.2:"High",	42:"High",	42.1:"High",	42.11:"High",	42.12:"High",	42.13:"High",	42.2:"High",	42.21:"High",	42.22:"High",	42.9:"High",	42.91:"High",	42.99:"High",	43:"High",	43.1:"High",	43.11:"High",	43.12:"High",	43.13:"High",	43.2:"Medium",	43.21:"Medium",	43.22:"Medium",	43.29:"Medium",	43.3:"Medium",	43.31:"Medium",	43.32:"Medium",	43.33:"Medium",	43.34:"Medium",	43.39:"Medium",	43.9:"Medium",	43.91:"High",	43.99:"High",	45:"Low",	45.1:"Low",	45.11:"Low",	45.19:"Low",	45.2:"Low",	45.3:"Low",	45.31:"Low",	45.32:"Low",	45.4:"Low",	46:"Low",	46.1:"Low",	46.11:"Low",	46.12:"Low",	46.13:"Low",	46.14:"Low",	46.15:"Low",	46.16:"Low",	46.17:"Low",	46.18:"Low",	46.19:"Low",	46.2:"Low",	46.21:"Low",	46.22:"Low",	46.23:"Low",	46.24:"Low",	46.3:"Low",	46.31:"Low",	46.32:"Low",	46.33:"Low",	46.34:"Low",	46.35:"Low",	46.36:"Low",	46.37:"Low",	46.38:"Low",	46.39:"Low",	46.4:"Low",	46.41:"Low",	46.42:"Low",	46.43:"Low",	46.44:"Low",	46.45:"Low",	46.46:"Low",	46.47:"Low",	46.48:"Low",	46.49:"Low",	46.5:"Low",	46.51:"Low",	46.52:"Low",	46.6:"Low",	46.61:"Low",	46.62:"Low",	46.63:"Low",	46.64:"Low",	46.65:"Low",	46.66:"Low",	46.69:"Low",	46.7:"Low",	46.71:"Medium",	46.72:"Low",	46.73:"Low",	46.74:"Low",	46.75:"Low",	46.76:"Low",	46.77:"Low",	46.9:"Low",	47:"Low",	47.1:"Low",	47.11:"Low",	47.19:"Low",	47.2:"Low",	47.21:"Low",	47.22:"Low",	47.23:"Low",	47.24:"Low",	47.25:"Low",	47.26:"Low",	47.29:"Low",	47.3:"Low",	47.4:"Low",	47.41:"Low",	47.42:"Low",	47.43:"Low",	47.5:"Low",	47.51:"Low",	47.52:"Low",	47.53:"Low",	47.54:"Low",	47.59:"Low",	47.6:"Low",	47.61:"Low",	47.62:"Low",	47.63:"Low",	47.64:"Low",	47.65:"Low",	47.7:"Low",	47.71:"Low",	47.72:"Low",	47.73:"Low",	47.74:"Low",	47.75:"Low",	47.76:"Low",	47.77:"Low",	47.78:"Low",	47.79:"Low",	47.8:"Low",	47.81:"Low",	47.82:"Low",	47.89:"Low",	47.9:"Low",	47.91:"Low",	47.99:"Low",	49.1:"Medium",	49.2:"Medium",	49.3:"Medium",	49.31:"Medium",	49.32:"Medium",	49.39:"Medium",	49.4:"Medium",	49.41:"Medium",	49.42:"Medium",	49.5:"Medium",	49.5:"Medium",	50:"Medium",	50.1:"Medium",	50.2:"Medium",	50.3:"Medium",	50.4:"Medium",	51:"High",	51.1:"Medium",	51.2:"Medium",	51.21:"Medium",	51.22:"High",	52:"Medium",	52.1:"Medium",	52.2:"Low",	52.21:"High",	52.22:"High",	52.23:"High",	52.24:"Medium",	52.29:"Low",	53:"Low",	53.1:"Low",	53.2:"Low",	53.2:"Low",	55:"Medium",	55.1:"Medium",	55.2:"Medium",	55.3:"Low",	55.9:"Medium",	56:"Low",	56.1:"Low",	56.2:"Low",	56.21:"Low",	56.29:"Low",	56.3:"Low",	58:"Limited",	58.1:"Limited",	58.11:"Limited",	58.12:"Limited",	58.13:"Limited",	58.14:"Limited",	58.19:"Medium",	58.2:"Low",	58.21:"Low",	58.29:"Low",	59.1:"Low",	59.11:"Low",	59.12:"Low",	59.13:"Low",	59.14:"Low",	59.2:"Limited",	60:"Low",	60.1:"Low",	60.2:"Low",	61:"Low",	61.1:"Low",	61.2:"Low",	61.3:"Low",	61.9:"Low",	62:"Low",	62.01:"Low",	62.02:"Low",	62.03:"Low",	62.09:"Low",	63:"Low",	63.1:"Low",	63.11:"Low",	63.12:"Low",	63.9:"Low",	63.91:"Low",	63.99:"Low",	64:"Low",	64.1:"Low",	64.11:"Low",	64.19:"Low",	64.2:"Low",	64.3:"Low",	64.9:"Low",	64.91:"Low",	64.92:"Low",	64.99:"Low",	65:"Low",	65.1:"Low",	65.11:"Low",	65.12:"Low",	65.2:"Low",	65.3:"Low",	66:"Low",	66.1:"Low",	66.11:"Low",	66.12:"Low",	66.19:"Low",	66.2:"Low",	66.21:"Low",	66.22:"Low",	66.29:"Low",	66.3:"Low",	68:"Low",	68.1:"Low",	68.2:"Low",	68.3:"Low",	68.31:"Low",	68.32:"Low",	69:"Low",	69.1:"Low",	69.2:"Low",	70:"Low",	70.1:"Low",	70.2:"Low",	70.21:"Low",	70.22:"Medium",	71:"High",	71.1:"High",	71.11:"High",	71.12:"High",	71.2:"Medium",	72:"High",	72.1:"High",	72.11:"High",	72.19:"High",	72.2:"Low",	72.2:"Low",	73:"Low",	73.1:"Low",	73.11:"Low",	73.12:"Low",	73.2:"Low",	74:"High",	74.1:"High",	74.2:"Low",	74.3:"Low",	74.9:"High",	75:"High",	77:"Low",	77.1:"Low",	77.11:"Low",	77.12:"Low",	77.2:"Low",	77.21:"Low",	77.22:"Low",	77.29:"Low",	77.3:"Medium",	77.31:"Medium",	77.32:"Medium",	77.33:"Medium",	77.34:"Medium",	77.35:"medium",	77.39:"Low",	77.4:"Low",	78:"Low",	78.1:"Low",	78.2:"Low",	78.3:"Low",	79:"Low",	79.1:"Low",	79.11:"Low",	79.12:"Low",	79.9:"Low",	80:"Low",	80.1:"Low",	80.2:"Low",	80.3:"Low",	81:"Low",	81.1:"Low",	81.2:"Medium",	81.21:"Medium",	81.22:"Medium",	81.29:"Medium",	81.3:"Medium",	82:"Low",	82.1:"Low",	82.11:"Low",	82.19:"Low",	82.2:"Low",	82.3:"Low",	82.9:"Low",	82.91:"Low",	82.92:"Low",	82.99:"Low",	84:"High",	84.1:"Low",	84.11:"Low",	84.12:"Low",	84.13:"Low",	84.2:"Low",	84.21:"Low",	84.22:"High",	84.23:"Low",	84.24:"Low",	84.25:"Low",	84.3:"Low",	85:"Medium",	85.1:"Medium",	85.2:"Medium",	85.3:"Medium",	85.31:"Medium",	85.32:"Medium",	85.4:"Medium",	85.41:"Medium",	85.42:"Medium",	85.5:"Medium",	85.51:"Medium",	85.52:"Medium",	85.53:"Medium",	85.59:"Medium",	85.6:"Medium",	86:"High",	86.1:"High",	86.2:"High",	86.21:"High",	86.22:"High",	86.23:"High",	86.9:"High",	87:"High",	87.1:"High",	87.2:"High",	87.3:"High",	87.9:"High",	88:"Medium",	88.1:"Medium",	88.9:"Medium",	88.91:"Low",	88.99:"Low",	90:"Low",	90.01:"Low",	90.02:"Low",	90.03:"Low",	90.04:"Low",	91:"Low",	91.01:"Low",	91.02:"Low",	91.03:"Low",	91.04:"Low",	92:"Low",	92:"Low",	93:"Low",	93.1:"Low",	93.11:"Low",	93.12:"Low",	93.13:"Low",	93.19:"Low",	93.2:"Low",	93.21:"Low",	93.29:"Low",	94:"Low",	94.1:"Low",	94.11:"Low",	94.12:"Low",	94.2:"Low",	94.9:"Low",	94.91:"Low",	94.92:"Low",	94.99:"Medium",	95.1:"Low",	95.11:"Low",	95.12:"Low",	95.2:"Low",	95.21:"Low",	95.22:"Low",	95.23:"Low",	95.24:"Low",	95.25:"Low",	95.29:"Low",	96:"Medium",	96.01:"Medium",	96.02:"Medium",	96.03:"Medium",	96.04:"Medium",	96.09:"Medium",
}

if selected_scheme == "ISO 9001":
  #According to the nace code calculations will be made on 14001 and 45001
  nace_code_9001=float(st.number_input("What is the nace code of the scope?"))
  nace_code_match=risk_tablo_9001[nace_code_9001]
  st.write("Your risk for that nace code:", nace_code_match)

  #The questions are reasons for increase or decrease, it shows the auditor why that inc or dec have been made
  if increase_or_decrease == "Increase":
    increase_questions = st.multiselect(
          'Reason of Increase or Decrease',
          ['Client is not "design responsible" or other standard elements are not covered in the scope (QMS only).-Fixed',
           'Activities considered to be of high risk (see Annex A, Table QMS 2-IAF MD5).-(QMS Only)-%10 increase',
           'Outsourced functions or processes -(QMS-EMS Only)-%10 increase'],
          ['Client is not "design responsible" or other standard elements are not covered in the scope (QMS only).-Fixed',
           'Outsourced functions or processes -(QMS-EMS Only)-%10 increase'])
    df_of_increase_questions=pd.DataFrame(increase_questions,columns=["Calculation"])
  if increase_or_decrease == "Decrease":
    decrease_questions = st.multiselect(
          'Reason of Increase or Decrease',
          ['Client is not "design responsible" or other standard elements are not covered in the scope (QMS only).-%20 decrease',
           'The company has simple, rutin and similar processses (Simple scope)-%10 decrease',
           'The company has been certified by an other CB or Royalcert before-%20 decrease'],
          ['The company has simple, rutin and similar processses (Simple scope)-%10 decrease',
           'The company has been certified by an other CB or Royalcert before-%20 decrease'])
    df_of_decrease_questions=pd.DataFrame(decrease_questions,columns=["Calculation"])

  #picking the rawmanday from dic
  Raw_manday= float(tablo_9001[employee_number])
  #Calculating the raw stage mandays.
  Stage1 = Raw_manday*(0.3)
  Stage2 = Raw_manday*(0.7)
  Surveillance = (Raw_manday / 3)
  Recertification = (Raw_manday / 3)*2
  #creating a Dataframe of Raw mandays
  Raw_manday_list=[Stage1,Stage2,Surveillance,Recertification]
  Raw_manday_list_df = pd.DataFrame(Raw_manday_list,index=["Stage 1","Stage 2","Surveillance","Recertification"],columns=["Calculation"])


  #calculating the increase or decrease with mandays
  if increase_or_decrease == "No":

      st.write(Raw_manday_list_df)
      #directly giving the Raw mandays without increase or decrease
      @st.cache_resource
      def convert_df(Raw_manday_list_df):
                  # IMPORTANT: Cache the conversion to prevent computation on every rerun
                  return Raw_manday_list_df.to_csv().encode('utf-8')
      csv = convert_df(Raw_manday_list_df)

      st.download_button(
                  label="Download data as CSV",
                  data=csv,
                  file_name='large_df.csv',
                  mime='text/csv',
                  )

  if increase_or_decrease == "Increase":
    Calculated_Stage_1_increase = (Stage1*rate_of_discount*0.01)+Stage1
    Calculated_Stage_2_increase = (Stage2*rate_of_discount*0.01)+Stage2
    Calculated_Surveillance_increase = (Surveillance*rate_of_discount*0.01)+Surveillance
    Calculated_Recertification_increase = (Recertification*rate_of_discount*0.01)+Recertification
    Calculated_increase_manday_list=[Calculated_Stage_1_increase,Calculated_Stage_2_increase,Calculated_Surveillance_increase,Calculated_Recertification_increase]
    Calculated_increase_manday_list_df=pd.DataFrame(Calculated_increase_manday_list,index=["Calculated Stage 1","Calculated Stage 2","Calculated Surveillance","Calculated Recertification"],columns=["Calculation"])
    list_for_concat=[Raw_manday_list_df,  Calculated_increase_manday_list_df, df_of_increase_questions]
    bırlesmıs_raw_calculated_increase = pd.concat(list_for_concat)

    st.write(bırlesmıs_raw_calculated_increase)
    #directly giving the Raw mandays with increase or decrease
    @st.cache_resource
    def convert_df(bırlesmıs_raw_calculated_increase):
                    # IMPORTANT: Cache the conversion to prevent computation on every rerun
                    return bırlesmıs_raw_calculated_increase.to_csv().encode('utf-8')
    csv = convert_df(bırlesmıs_raw_calculated_increase)

    st.download_button(
                    label="Download data as CSV",
                    data=csv,
                    file_name='large_df.csv',
                    mime='text/csv',
                    )

  if increase_or_decrease == "Decrease":
    Calculated_Stage_1_decrease = Stage1-(Stage1*rate_of_discount*0.01)
    Calculated_Stage_2_decrease = Stage2-(Stage2*rate_of_discount*0.01)
    Calculated_Surveillance_decrease = Surveillance-(Surveillance*rate_of_discount*0.01)
    Calculated_Recertification_decrease = Recertification-(Recertification*rate_of_discount*0.01)
    Calculated_decrease_manday_list=[Calculated_Stage_1_decrease,Calculated_Stage_2_decrease,Calculated_Surveillance_decrease,Calculated_Recertification_decrease]
    Calculated_decrease_manday_list_df=pd.DataFrame(Calculated_decrease_manday_list,index=["Calculated Stage 1","Calculated Stage 2","Calculated Surveillance","Calculated Recertification"],columns=["Calculation"])
    list_for_concat_decrease=[Raw_manday_list_df,  Calculated_decrease_manday_list_df,df_of_decrease_questions]
    bırlesmıs_raw_calculated_decrease = pd.concat(list_for_concat_decrease)

    st.write(bırlesmıs_raw_calculated_decrease)
    #directly giving the Raw mandays without increase or decrease
    @st.cache_resource
    def convert_df(bırlesmıs_raw_calculated_decrease):
                    # IMPORTANT: Cache the conversion to prevent computation on every rerun
                    return bırlesmıs_raw_calculated_decrease.to_csv().encode('utf-8')
    csv = convert_df(bırlesmıs_raw_calculated_decrease)

    st.download_button(
                    label="Download data as CSV",
                    data=csv,
                    file_name='large_df.csv',
                    mime='text/csv',
                  )

  #making the site calculation
  if site_info == "Yes":
    #picking the rawmanday from dic
    Raw_manday_site= float(tablo_9001[employee_number_site])
    #Calculating the raw stage mandays.
    Stage1_site = Raw_manday_site*(0.3)
    Stage2_site = Raw_manday_site*(0.7)
    Surveillance_site = (Raw_manday_site / 3)
    Recertification_site = (Raw_manday_site / 3)*2
    #creating dataframe for site
    Raw_manday_list_site=[Stage1_site,Stage2_site,Surveillance_site,Recertification_site]
    Raw_manday_list_site_df = pd.DataFrame(Raw_manday_list_site,index=["Stage 1 Site","Stage 2 Site","Survaillance Site","Recertification Site"],columns=["Calculation"])

    #calculating the increase or decrease with mandays for site
    if increase_or_decrease == "No":
      st.write(Raw_manday_list_site_df)
      bırlesmıs_raw_site_no = pd.concat([Raw_manday_list_site_df,Raw_manday_list_df])

      #directly giving the Raw mandays without increase or decrease
      @st.cache_resource
      def convert_df(bırlesmıs_raw_site_no):
                # IMPORTANT: Cache the conversion to prevent computation on every rerun
                return bırlesmıs_raw_site_no.to_csv().encode('utf-8')
      csv = convert_df(bırlesmıs_raw_site_no)

      st.download_button(
                label="Download this data as CSV",
                data=csv,
                file_name='large_df.csv',
                mime='text/csv',
                )

    if increase_or_decrease == "Increase":
      Calculated_Stage_1_site_increase = (Stage1_site*rate_of_discount*0.01)+Stage1_site
      Calculated_Stage_2_site_increase = (Stage2_site*rate_of_discount*0.01)+Stage2_site
      Calculated_Surveillance_site_increase = (Surveillance_site*rate_of_discount*0.01)+Surveillance_site
      Calculated_Recertification_site_increase = (Recertification_site*rate_of_discount*0.01)+Recertification_site
      Calculated_increase_manday_site_list=[Calculated_Stage_1_site_increase,Calculated_Stage_2_site_increase,Calculated_Surveillance_site_increase,Calculated_Recertification_site_increase]
      Calculated_increase_manday_site_list_df=pd.DataFrame(Calculated_increase_manday_site_list,index=["Calculated Stage 1 Site","Calculated Stage 2 Site","Calculated Survaillance Site","Calculated Recertification Site"],columns=["Calculation"])
      list_for_concat_site_increase=[Raw_manday_list_df,  Calculated_increase_manday_list_df, df_of_increase_questions,Raw_manday_list_site_df,Calculated_increase_manday_site_list_df]
      #To download site infos with together we concat
      bırlesmıs_raw_calculated_increase_site = pd.concat(list_for_concat_site_increase)
      st.write(bırlesmıs_raw_calculated_increase_site)
      @st.cache_resource
      def convert_df(bırlesmıs_raw_calculated_increase_site):
                # IMPORTANT: Cache the conversion to prevent computation on every rerun
                return bırlesmıs_raw_calculated_increase_site.to_csv().encode('utf-8')
      csv = convert_df(bırlesmıs_raw_calculated_increase_site)

      st.download_button(
                label="Download data as Excel",
                data=csv,
                file_name='large_df.csv',
                mime='text/csv',
                )


    if increase_or_decrease == "Decrease":
      Calculated_Stage_1_site_decrease = Stage1_site-(Stage1_site*rate_of_discount*0.01)
      Calculated_Stage_2_site_decrease = Stage2_site-(Stage2_site*rate_of_discount*0.01)
      Calculated_Surveillance_site_decrease = Surveillance_site-(Surveillance_site*rate_of_discount*0.01)
      Calculated_Recertification_site_decrease = Recertification_site-(Recertification_site*rate_of_discount*0.01)
      Calculated_decrease_manday_site_list=[Calculated_Stage_1_site_decrease,Calculated_Stage_2_site_decrease,Calculated_Surveillance_site_decrease,Calculated_Recertification_site_decrease]
      Calculated_decrease_manday_site_list_df=pd.DataFrame(Calculated_decrease_manday_site_list,index=["Calculated Stage 1 Site","Calculated Stage 2 Site","Calculated Survaillance Site","Calculated Recertification Site"],columns=["Calculation"])
      list_for_concat_site_decrease=[Raw_manday_list_df,  Calculated_decrease_manday_list_df,df_of_decrease_questions,Raw_manday_list_site_df, Calculated_decrease_manday_site_list_df]
      #To download site infos with together we concat
      bırlesmıs_raw_calculated_decrease_site = pd.concat(list_for_concat_site_decrease)
      st.write(bırlesmıs_raw_calculated_decrease_site)
      @st.cache_resource
      def convert_df(bırlesmıs_raw_calculated_decrease_site):
                # IMPORTANT: Cache the conversion to prevent computation on every rerun
                return bırlesmıs_raw_calculated_decrease_site.to_csv().encode('utf-8')
      csv = convert_df(bırlesmıs_raw_calculated_decrease_site)

      st.download_button(
                label="Download the data as CSV",
                data=csv,
                file_name='large_df.csv',
                mime='text/csv',
                )






if selected_scheme == "ISO 14001":
  #According to the nace code calculations will be made on 14001 and 45001
  nace_code_14001=float(st.number_input("What is the nace code of the scope?"))
  nace_code_match=risk_tablo_14001[nace_code_14001]
  st.write("Your risk for that nace code:", nace_code_match)

    #The questions are reasons for increase or decrease, it shows the auditor why that inc or dec have been made
  if increase_or_decrease == "Increase":
    increase_questions_14001 = st.multiselect(
          'Reason of Increase or Decrease',
          ['Company has many indirect aspects related with its processes (EMS Only).-%10 increase',
           'Company has enviromental accidents and impact in past. (EMS Only)-%10 increase',
           'Views of interested parties (Especially for EMS and OHSMS)-%10 increase'],
          ['Company has many indirect aspects related with its processes (EMS Only).-%10 increase',
           'Views of interested parties (Especially for EMS and OHSMS)-%10 increase'])
    df_of_increase_questions_14001=pd.DataFrame(increase_questions_14001,columns=["Calculation"])
  if increase_or_decrease == "Decrease":
    decrease_questions_14001 = st.multiselect(
          'Reason of Increase or Decrease',
          ['The company works in a small area considering the number of the employees (e.g. one office)-%5 decrease',
           'The company has simple, rutin and similar processses (Simple scope)-%10 decrease',
           'The company has been certified by an other CB or Royalcert before-%20 decrease'],
          ['The company has simple, rutin and similar processses (Simple scope)-%10 decrease',
           'The company has been certified by an other CB or Royalcert before-%20 decrease'])
    df_of_decrease_questions_14001=pd.DataFrame(decrease_questions_14001,columns=["Calculation"])

  if nace_code_match == "Low":
    Raw_manday_14001= float(tablo_14_45_low[employee_number])
  if nace_code_match == "Medium":
    Raw_manday_14001= float(tablo_14_45_med[employee_number])
  if nace_code_match == "High":
    Raw_manday_14001= float(tablo_14_45_high[employee_number])
  if nace_code_match == "Limited":
    Raw_manday_14001= float(tablo_14_lim[employee_number])
  #Calculating the raw stage mandays.
  Stage1_14001 = Raw_manday_14001*(0.3)
  Stage2_14001 = Raw_manday_14001*(0.7)
  Surveillance_14001 = (Raw_manday_14001 / 3)
  Recertification_14001 = (Raw_manday_14001 / 3)*2
  #creating a Dataframe of Raw mandays
  Raw_manday_list_14001=[Stage1_14001,Stage2_14001,Surveillance_14001,Recertification_14001]
  Raw_manday_list_df_14001 = pd.DataFrame(Raw_manday_list_14001,index=["Stage 1","Stage 2","Surveillance","Recertification"],columns=["Calculation"])

  #calculating the increase or decrease with mandays
  if increase_or_decrease == "No":

      st.write(Raw_manday_list_df_14001)
      #directly giving the Raw mandays without increase or decrease
      @st.cache_resource
      def convert_df(Raw_manday_list_df_14001):
                  # IMPORTANT: Cache the conversion to prevent computation on every rerun
                  return Raw_manday_list_df_14001.to_csv().encode('utf-8')
      csv = convert_df(Raw_manday_list_df_14001)

      st.download_button(
                  label="Download data as CSV",
                  data=csv,
                  file_name='large_df.csv',
                  mime='text/csv',
                  )

  if increase_or_decrease == "Increase":
      Calculated_Stage_1_increase_14001 = (Stage1_14001*rate_of_discount*0.01)+Stage1_14001
      Calculated_Stage_2_increase_14001 = (Stage2_14001*rate_of_discount*0.01)+Stage2_14001
      Calculated_Surveillance_increase_14001 = (Surveillance_14001*rate_of_discount*0.01)+Surveillance_14001
      Calculated_Recertification_increase_14001 = (Recertification_14001*rate_of_discount*0.01)+Recertification_14001
      Calculated_increase_manday_list_14001=[Calculated_Stage_1_increase_14001,Calculated_Stage_2_increase_14001,Calculated_Surveillance_increase_14001,Calculated_Recertification_increase_14001]
      Calculated_increase_manday_list_df_14001=pd.DataFrame(Calculated_increase_manday_list_14001,index=["Calculated Stage 1","Calculated Stage 2","Calculated Surveillance","Calculated Recertification"],columns=["Calculation"])
      list_for_concat_14001=[Raw_manday_list_df_14001,  Calculated_increase_manday_list_df_14001, df_of_increase_questions_14001]
      bırlesmıs_raw_calculated_increase_14001 = pd.concat(list_for_concat_14001)

      st.write(bırlesmıs_raw_calculated_increase_14001)
      #directly giving the Raw mandays with increase or decrease
      @st.cache_resource
      def convert_df(bırlesmıs_raw_calculated_increase_14001):
                  # IMPORTANT: Cache the conversion to prevent computation on every rerun
                  return bırlesmıs_raw_calculated_increase_14001.to_csv().encode('utf-8')
      csv = convert_df(bırlesmıs_raw_calculated_increase_14001)

      st.download_button(
                  label="Download data as CSV",
                  data=csv,
                  file_name='large_df.csv',
                  mime='text/csv',
                  )

  if increase_or_decrease == "Decrease":
      Calculated_Stage_1_decrease_14001 = Stage1_14001-(Stage1_14001*rate_of_discount*0.01)
      Calculated_Stage_2_decrease_14001 = Stage2_14001-(Stage2_14001*rate_of_discount*0.01)
      Calculated_Surveillance_decrease_14001 = Surveillance_14001-(Surveillance_14001*rate_of_discount*0.01)
      Calculated_Recertification_decrease_14001 = Recertification_14001-(Recertification_14001*rate_of_discount*0.01)
      Calculated_decrease_manday_list_14001=[Calculated_Stage_1_decrease_14001,Calculated_Stage_2_decrease_14001,Calculated_Surveillance_decrease_14001,Calculated_Recertification_decrease_14001]
      Calculated_decrease_manday_list_df_14001=pd.DataFrame(Calculated_decrease_manday_list_14001,index=["Calculated Stage 1","Calculated Stage 2","Calculated Surveillance","Calculated Recertification"],columns=["Calculation"])
      list_for_concat_decrease_14001=[Raw_manday_list_df_14001,  Calculated_decrease_manday_list_df_14001,df_of_decrease_questions_14001]
      bırlesmıs_raw_calculated_decrease_14001 = pd.concat(list_for_concat_decrease_14001)

      st.write(bırlesmıs_raw_calculated_decrease_14001)
      #directly giving the Raw mandays without increase or decrease
      @st.cache_resource
      def convert_df(bırlesmıs_raw_calculated_decrease_14001):
                    # IMPORTANT: Cache the conversion to prevent computation on every rerun
                    return bırlesmıs_raw_calculated_decrease_14001.to_csv().encode('utf-8')
      csv = convert_df(bırlesmıs_raw_calculated_decrease_14001)

      st.download_button(
                    label="Download data as CSV",
                    data=csv,
                    file_name='large_df.csv',
                    mime='text/csv',
                  )

  #making the site calculation
  if site_info == "Yes":
    if nace_code_match == "Low":
      Raw_manday_site_14001= float(tablo_14_45_low[employee_number_site])
    if nace_code_match == "Medium":
      Raw_manday_site_14001= float(tablo_14_45_med[employee_number_site])
    if nace_code_match == "High":
      Raw_manday_site_14001= float(tablo_14_45_high[employee_number_site])
    if nace_code_match == "Limited":
      Raw_manday_site_14001= float(tablo_14_lim[employee_number])
    #picking the rawmanday from dic
    #Calculating the raw stage mandays.
    Stage1_site_14001 = Raw_manday_site_14001*(0.3)
    Stage2_site_14001 = Raw_manday_site_14001*(0.7)
    Surveillance_site_14001 = (Raw_manday_site_14001 / 3)
    Recertification_site_14001 = (Raw_manday_site_14001 / 3)*2
    #creating dataframe for site
    Raw_manday_list_site_14001=[Stage1_site_14001,Stage2_site_14001,Surveillance_site_14001,Recertification_site_14001]
    Raw_manday_list_site_df_14001 = pd.DataFrame(Raw_manday_list_site_14001,index=["Stage 1 Site","Stage 2 Site","Survaillance Site","Recertification Site"],columns=["Calculation"])

    if increase_or_decrease == "No":
      st.write(Raw_manday_list_site_df_14001)
      bırlesmıs_raw_site_no_14001 = pd.concat([Raw_manday_list_site_df_14001,Raw_manday_list_df_14001])

      #directly giving the Raw mandays without increase or decrease
      @st.cache_resource
      def convert_df(bırlesmıs_raw_site_no_14001):
                # IMPORTANT: Cache the conversion to prevent computation on every rerun
                return bırlesmıs_raw_site_no_14001.to_csv().encode('utf-8')
      csv = convert_df(bırlesmıs_raw_site_no_14001)

      st.download_button(
                label="Download this data as CSV",
                data=csv,
                file_name='large_df.csv',
                mime='text/csv',
                )

    if increase_or_decrease == "Increase":
        Calculated_Stage_1_site_increase_14001 = (Stage1_site_14001*rate_of_discount*0.01)+Stage1_site_14001
        Calculated_Stage_2_site_increase_14001 = (Stage2_site_14001*rate_of_discount*0.01)+Stage2_site_14001
        Calculated_Surveillance_site_increase_14001 = (Surveillance_site_14001*rate_of_discount*0.01)+Surveillance_site_14001
        Calculated_Recertification_site_increase_14001 = (Recertification_site_14001*rate_of_discount*0.01)+Recertification_site_14001
        Calculated_increase_manday_site_list_14001=[Calculated_Stage_1_site_increase_14001,Calculated_Stage_2_site_increase_14001,Calculated_Surveillance_site_increase_14001,Calculated_Recertification_site_increase_14001]
        Calculated_increase_manday_site_list_df_14001=pd.DataFrame(Calculated_increase_manday_site_list_14001,index=["Calculated Stage 1 Site","Calculated Stage 2 Site","Calculated Survaillance Site","Calculated Recertification Site"],columns=["Calculation"])
        list_for_concat_site_increase_14001=[Raw_manday_list_df_14001,  Calculated_increase_manday_list_df_14001, df_of_increase_questions_14001,Raw_manday_list_site_df_14001,Calculated_increase_manday_site_list_df_14001]
        #To download site infos with together we concat
        bırlesmıs_raw_calculated_increase_site_14001 = pd.concat(list_for_concat_site_increase_14001)
        st.write(bırlesmıs_raw_calculated_increase_site_14001)
        @st.cache_resource
        def convert_df(bırlesmıs_raw_calculated_increase_site_14001):
                  # IMPORTANT: Cache the conversion to prevent computation on every rerun
                  return bırlesmıs_raw_calculated_increase_site_14001.to_csv().encode('utf-8')
        csv = convert_df(bırlesmıs_raw_calculated_increase_site_14001)

        st.download_button(
                  label="Download data as Excel",
                  data=csv,
                  file_name='large_df.csv',
                  mime='text/csv',
                  )

    if increase_or_decrease == "Decrease":
        Calculated_Stage_1_site_decrease_14001 = Stage1_site_14001-(Stage1_site_14001*rate_of_discount*0.01)
        Calculated_Stage_2_site_decrease_14001 = Stage2_site_14001-(Stage2_site_14001*rate_of_discount*0.01)
        Calculated_Surveillance_site_decrease_14001 = Surveillance_site_14001-(Surveillance_site_14001*rate_of_discount*0.01)
        Calculated_Recertification_site_decrease_14001 = Recertification_site_14001-(Recertification_site_14001*rate_of_discount*0.01)
        Calculated_decrease_manday_site_list_14001=[Calculated_Stage_1_site_decrease_14001,Calculated_Stage_2_site_decrease_14001,Calculated_Surveillance_site_decrease_14001,Calculated_Recertification_site_decrease_14001]
        Calculated_decrease_manday_site_list_df_14001=pd.DataFrame(Calculated_decrease_manday_site_list_14001,index=["Calculated Stage 1 Site","Calculated Stage 2 Site","Calculated Survaillance Site","Calculated Recertification Site"],columns=["Calculation"])
        list_for_concat_site_decrease_14001=[Raw_manday_list_df_14001,  Calculated_decrease_manday_list_df_14001,df_of_decrease_questions_14001,Raw_manday_list_site_df_14001, Calculated_decrease_manday_site_list_df_14001]
        #To download site infos with together we concat
        bırlesmıs_raw_calculated_decrease_site_14001 = pd.concat(list_for_concat_site_decrease_14001)
        st.write(bırlesmıs_raw_calculated_decrease_site_14001)
        @st.cache_resource
        def convert_df(bırlesmıs_raw_calculated_decrease_site_14001):
                  # IMPORTANT: Cache the conversion to prevent computation on every rerun
                  return bırlesmıs_raw_calculated_decrease_site_14001.to_csv().encode('utf-8')
        csv = convert_df(bırlesmıs_raw_calculated_decrease_site_14001)

        st.download_button(
                  label="Download the data as CSV",
                  data=csv,
                  file_name='large_df.csv',
                  mime='text/csv',
                  )




if selected_scheme == "ISO 45001":
  #According to the nace code calculations will be made on 14001 and 45001
  nace_code_45001=float(st.number_input("What is the nace code of the scope?"))
  nace_code_match=risk_tablo_45001[nace_code_45001]
  st.write("Your risk for that nace code:", nace_code_match)

      #The questions are reasons for increase or decrease, it shows the auditor why that inc or dec have been made
  if increase_or_decrease == "Increase":
    increase_questions_45001 = st.multiselect(
          'Reason of Increase or Decrease',
          ['Company has many indirect aspects related with its processes (EMS Only).-%10 increase',
           'Company has enviromental accidents and impact in past. (EMS Only)-%10 increase',
           'Views of interested parties (Especially for EMS and OHSMS)-%10 increase'],
          ['Company has many indirect aspects related with its processes (EMS Only).-%10 increase',
           'Views of interested parties (Especially for EMS and OHSMS)-%10 increase'])
    df_of_increase_questions_45001=pd.DataFrame(increase_questions_45001,columns=["Calculation"])
  if increase_or_decrease == "Decrease":
    decrease_questions_45001 = st.multiselect(
          'Reason of Increase or Decrease',
          ['The company works in a small area considering the number of the employees (e.g. one office)-%5 decrease',
           'The company has simple, rutin and similar processses (Simple scope)-%10 decrease',
           'The company has been certified by an other CB or Royalcert before-%20 decrease'],
          ['The company has simple, rutin and similar processses (Simple scope)-%10 decrease',
           'The company has been certified by an other CB or Royalcert before-%20 decrease'])
    df_of_decrease_questions_45001=pd.DataFrame(decrease_questions_45001,columns=["Calculation"])

  if nace_code_match == "Low":
    Raw_manday_45001= float(tablo_14_45_low[employee_number])
  if nace_code_match == "Medium":
    Raw_manday_45001= float(tablo_14_45_med[employee_number])
  if nace_code_match == "High":
    Raw_manday_45001= float(tablo_14_45_high[employee_number])
  #Calculating the raw stage mandays.
  Stage1_45001 = Raw_manday_45001*(0.3)
  Stage2_45001 = Raw_manday_45001*(0.7)
  Surveillance_45001 = (Raw_manday_45001 / 3)
  Recertification_45001 = (Raw_manday_45001 / 3)*2
  #creating a Dataframe of Raw mandays
  Raw_manday_list_45001=[Stage1_45001,Stage2_45001,Surveillance_45001,Recertification_45001]
  Raw_manday_list_df_45001 = pd.DataFrame(Raw_manday_list_45001,index=["Stage 1","Stage 2","Surveillance","Recertification"],columns=["Calculation"])


  #calculating the increase or decrease with mandays
  if increase_or_decrease == "No":

      st.write(Raw_manday_list_df_45001)
      #directly giving the Raw mandays without increase or decrease
      @st.cache_resource
      def convert_df(Raw_manday_list_df_45001):
                  # IMPORTANT: Cache the conversion to prevent computation on every rerun
                  return Raw_manday_list_df_45001.to_csv().encode('utf-8')
      csv = convert_df(Raw_manday_list_df_45001)

      st.download_button(
                  label="Download data as CSV",
                  data=csv,
                  file_name='large_df.csv',
                  mime='text/csv',
                  )


  if increase_or_decrease == "Increase":
      Calculated_Stage_1_increase_45001 = (Stage1_45001*rate_of_discount*0.01)+Stage1_45001
      Calculated_Stage_2_increase_45001 = (Stage2_45001*rate_of_discount*0.01)+Stage2_45001
      Calculated_Surveillance_increase_45001 = (Surveillance_45001*rate_of_discount*0.01)+Surveillance_45001
      Calculated_Recertification_increase_45001 = (Recertification_45001*rate_of_discount*0.01)+Recertification_45001
      Calculated_increase_manday_list_45001=[Calculated_Stage_1_increase_45001,Calculated_Stage_2_increase_45001,Calculated_Surveillance_increase_45001,Calculated_Recertification_increase_45001]
      Calculated_increase_manday_list_df_45001=pd.DataFrame(Calculated_increase_manday_list_45001,index=["Calculated Stage 1","Calculated Stage 2","Calculated Surveillance","Calculated Recertification"],columns=["Calculation"])
      list_for_concat_45001=[Raw_manday_list_df_45001,  Calculated_increase_manday_list_df_45001, df_of_increase_questions_45001]
      bırlesmıs_raw_calculated_increase_45001 = pd.concat(list_for_concat_45001)

      st.write(bırlesmıs_raw_calculated_increase_45001)
      #directly giving the Raw mandays with increase or decrease
      @st.cache_resource
      def convert_df(bırlesmıs_raw_calculated_increase_45001):
                  # IMPORTANT: Cache the conversion to prevent computation on every rerun
                  return bırlesmıs_raw_calculated_increase_45001.to_csv().encode('utf-8')
      csv = convert_df(bırlesmıs_raw_calculated_increase_45001)

  if increase_or_decrease == "Decrease":
      Calculated_Stage_1_decrease_45001 = Stage1_45001-(Stage1_45001*rate_of_discount*0.01)
      Calculated_Stage_2_decrease_45001 = Stage2_45001-(Stage2_45001*rate_of_discount*0.01)
      Calculated_Surveillance_decrease_45001 = Surveillance_45001-(Surveillance_45001*rate_of_discount*0.01)
      Calculated_Recertification_decrease_45001 = Recertification_45001-(Recertification_45001*rate_of_discount*0.01)
      Calculated_decrease_manday_list_45001=[Calculated_Stage_1_decrease_45001,Calculated_Stage_2_decrease_45001,Calculated_Surveillance_decrease_45001,Calculated_Recertification_decrease_45001]
      Calculated_decrease_manday_list_df_45001=pd.DataFrame(Calculated_decrease_manday_list_45001,index=["Calculated Stage 1","Calculated Stage 2","Calculated Surveillance","Calculated Recertification"],columns=["Calculation"])
      list_for_concat_decrease_45001=[Raw_manday_list_df_45001,  Calculated_decrease_manday_list_df_45001,df_of_decrease_questions_45001]
      bırlesmıs_raw_calculated_decrease_45001 = pd.concat(list_for_concat_decrease_45001)

      st.write(bırlesmıs_raw_calculated_decrease_45001)
      #directly giving the Raw mandays without increase or decrease
      @st.cache_resource
      def convert_df(bırlesmıs_raw_calculated_decrease_45001):
                    # IMPORTANT: Cache the conversion to prevent computation on every rerun
                    return bırlesmıs_raw_calculated_decrease_45001.to_csv().encode('utf-8')
      csv = convert_df(bırlesmıs_raw_calculated_decrease_45001)

      st.download_button(
                    label="Download data as CSV",
                    data=csv,
                    file_name='large_df.csv',
                    mime='text/csv',
                  )


  #making the site calculation
  if site_info == "Yes":
    if nace_code_match == "Low":
      Raw_manday_site_45001= float(tablo_14_45_low[employee_number_site])
    if nace_code_match == "Medium":
      Raw_manday_site_45001= float(tablo_14_45_med[employee_number_site])
    if nace_code_match == "High":
      Raw_manday_site_45001= float(tablo_14_45_high[employee_number_site])
    if nace_code_match == "Limited":
      Raw_manday_14001= float(tablo_14_lim[employee_number_site])
    #picking the rawmanday from dic
    #Calculating the raw stage mandays.
    Stage1_site_45001 = Raw_manday_site_45001*(0.3)
    Stage2_site_45001 = Raw_manday_site_45001*(0.7)
    Surveillance_site_45001 = (Raw_manday_site_45001 / 3)
    Recertification_site_45001 = (Raw_manday_site_45001 / 3)*2
    #creating dataframe for site
    Raw_manday_list_site_45001=[Stage1_site_45001,Stage2_site_45001,Surveillance_site_45001,Recertification_site_45001]
    Raw_manday_list_site_df_45001 = pd.DataFrame(Raw_manday_list_site_45001,index=["Stage 1 Site","Stage 2 Site","Survaillance Site","Recertification Site"],columns=["Calculation"])

    if increase_or_decrease == "No":
      st.write(Raw_manday_list_site_df_45001)
      bırlesmıs_raw_site_no_45001 = pd.concat([Raw_manday_list_site_df_45001,Raw_manday_list_df_45001])
      #directly giving the Raw mandays without increase or decrease
      @st.cache_resource
      def convert_df(bırlesmıs_raw_site_no_45001):
                  # IMPORTANT: Cache the conversion to prevent computation on every rerun
                  return bırlesmıs_raw_site_no_45001.to_csv().encode('utf-8')
      csv = convert_df(bırlesmıs_raw_site_no_45001)

      st.download_button(
                  label="Download this data as CSV",
                  data=csv,
                  file_name='large_df.csv',
                  mime='text/csv',
                  )


    if increase_or_decrease == "Increase":
        Calculated_Stage_1_site_increase_45001 = (Stage1_site_45001*rate_of_discount*0.01)+Stage1_site_45001
        Calculated_Stage_2_site_increase_45001 = (Stage2_site_45001*rate_of_discount*0.01)+Stage2_site_45001
        Calculated_Surveillance_site_increase_45001 = (Surveillance_site_45001*rate_of_discount*0.01)+Surveillance_site_45001
        Calculated_Recertification_site_increase_45001 = (Recertification_site_45001*rate_of_discount*0.01)+Recertification_site_45001
        Calculated_increase_manday_site_list_45001=[Calculated_Stage_1_site_increase_45001,Calculated_Stage_2_site_increase_45001,Calculated_Surveillance_site_increase_45001,Calculated_Recertification_site_increase_45001]
        Calculated_increase_manday_site_list_df_45001=pd.DataFrame(Calculated_increase_manday_site_list_45001,index=["Calculated Stage 1 Site","Calculated Stage 2 Site","Calculated Survaillance Site","Calculated Recertification Site"],columns=["Calculation"])
        list_for_concat_site_increase_45001=[Raw_manday_list_df_45001,  Calculated_increase_manday_list_df_45001, df_of_increase_questions_45001,Raw_manday_list_site_df_45001,Calculated_increase_manday_site_list_df_45001]
        #To download site infos with together we concat
        bırlesmıs_raw_calculated_increase_site_45001 = pd.concat(list_for_concat_site_increase_45001)
        st.write(bırlesmıs_raw_calculated_increase_site_45001)
        @st.cache_resource
        def convert_df(bırlesmıs_raw_calculated_increase_site_45001):
                  # IMPORTANT: Cache the conversion to prevent computation on every rerun
                  return bırlesmıs_raw_calculated_increase_site_45001.to_csv().encode('utf-8')
        csv = convert_df(bırlesmıs_raw_calculated_increase_site_45001)

        st.download_button(
                  label="Download data as Excel",
                  data=csv,
                  file_name='large_df.csv',
                  mime='text/csv',
                  )



    if increase_or_decrease == "Decrease":
        Calculated_Stage_1_site_decrease_45001 = Stage1_site_45001-(Stage1_site_45001*rate_of_discount*0.01)
        Calculated_Stage_2_site_decrease_45001 = Stage2_site_45001-(Stage2_site_45001*rate_of_discount*0.01)
        Calculated_Surveillance_site_decrease_45001 = Surveillance_site_45001-(Surveillance_site_45001*rate_of_discount*0.01)
        Calculated_Recertification_site_decrease_45001 = Recertification_site_45001-(Recertification_site_45001*rate_of_discount*0.01)
        Calculated_decrease_manday_site_list_45001=[Calculated_Stage_1_site_decrease_45001,Calculated_Stage_2_site_decrease_45001,Calculated_Surveillance_site_decrease_45001,Calculated_Recertification_site_decrease_45001]
        Calculated_decrease_manday_site_list_df_45001=pd.DataFrame(Calculated_decrease_manday_site_list_45001,index=["Calculated Stage 1 Site","Calculated Stage 2 Site","Calculated Survaillance Site","Calculated Recertification Site"],columns=["Calculation"])
        list_for_concat_site_decrease_45001=[Raw_manday_list_df_45001,  Calculated_decrease_manday_list_df_45001,df_of_decrease_questions_45001,Raw_manday_list_site_df_45001, Calculated_decrease_manday_site_list_df_45001]
        #To download site infos with together we concat
        bırlesmıs_raw_calculated_decrease_site_45001 = pd.concat(list_for_concat_site_decrease_45001)
        st.write(bırlesmıs_raw_calculated_decrease_site_45001)
        @st.cache_resource
        def convert_df(bırlesmıs_raw_calculated_decrease_site_45001):
                  # IMPORTANT: Cache the conversion to prevent computation on every rerun
                  return bırlesmıs_raw_calculated_decrease_site_45001.to_csv().encode('utf-8')
        csv = convert_df(bırlesmıs_raw_calculated_decrease_site_45001)

        st.download_button(
                  label="Download the data as CSV",
                  data=csv,
                  file_name='large_df.csv',
                  mime='text/csv',
                  )
